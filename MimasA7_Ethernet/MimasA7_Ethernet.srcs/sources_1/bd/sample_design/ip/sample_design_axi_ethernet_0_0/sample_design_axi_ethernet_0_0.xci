<?xml version="1.0" encoding="UTF-8"?>
<spirit:design xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>xci</spirit:library>
  <spirit:name>unknown</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:componentInstances>
    <spirit:componentInstance>
      <spirit:instanceName>sample_design_axi_ethernet_0_0</spirit:instanceName>
      <spirit:componentRef spirit:vendor="xilinx.com" spirit:library="ip" spirit:name="axi_ethernet" spirit:version="7.2"/>
      <spirit:configurableElementValues>
        <spirit:configurableElementValue spirit:referenceId="ADDRBLOCK_BASE_ADDRESS.S_AXI.Reg0">0x00000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.ASSOCIATED_BUSIF">m_axis_rxd:m_axis_rxs:s_axis_txc:s_axis_txd</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.ASSOCIATED_PORT"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.ASSOCIATED_RESET">axi_rxd_arstn:axi_rxs_arstn:axi_txc_arstn:axi_txd_arstn</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.CLK_DOMAIN">/clk_wiz_0_clk_out1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.FREQ_HZ">100000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.FREQ_TOLERANCE_HZ">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.ASSOCIATED_BUSIF"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.ASSOCIATED_PORT"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.ASSOCIATED_RESET"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.CLK_DOMAIN">/clk_wiz_0_clk_out1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.FREQ_HZ">125000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.FREQ_TOLERANCE_HZ">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.PHASE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.ASSOCIATED_BUSIF"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.ASSOCIATED_PORT"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.ASSOCIATED_RESET"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.CLK_DOMAIN">bd_ec09_mac_0_gtx_clk90_out</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.FREQ_HZ">125000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.FREQ_TOLERANCE_HZ">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.PHASE">90</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.ASSOCIATED_BUSIF"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.ASSOCIATED_PORT"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.ASSOCIATED_RESET"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.CLK_DOMAIN">bd_ec09_mac_0_gtx_clk_out</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.FREQ_HZ">125000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.FREQ_TOLERANCE_HZ">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.PHASE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.ASSOCIATED_BUSIF"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.ASSOCIATED_PORT"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.ASSOCIATED_RESET"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.CLK_DOMAIN">/clk_wiz_0_clk_out1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.FREQ_HZ">200000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.FREQ_TOLERANCE_HZ">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.ASSOCIATED_BUSIF">s_axi</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.ASSOCIATED_CLKEN">CE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.ASSOCIATED_PORT"/>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.ASSOCIATED_RESET">s_axi_lite_resetn</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.CLK_DOMAIN">/clk_wiz_0_clk_out1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.FREQ_HZ">100000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.FREQ_TOLERANCE_HZ">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.INTR.INTERRUPT.PortWidth">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.INTR.INTERRUPT.SENSITIVITY">LEVEL_HIGH</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.INTR.MAC_IRQ.PortWidth">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.INTR.MAC_IRQ.SENSITIVITY">EDGE_RISING</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.MDIO.BOARD.ASSOCIATED_PARAM">MDIO_BOARD_INTERFACE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.MDIO.CAN_DEBUG">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.CLK_DOMAIN">/clk_wiz_0_clk_out1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.FREQ_HZ">100000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.HAS_TKEEP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.HAS_TLAST">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.HAS_TREADY">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.HAS_TSTRB">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.LAYERED_METADATA">undef</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.TDATA_NUM_BYTES">4</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.TDEST_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.TID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.TUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.CLK_DOMAIN">/clk_wiz_0_clk_out1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.FREQ_HZ">100000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.HAS_TKEEP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.HAS_TLAST">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.HAS_TREADY">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.HAS_TSTRB">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.LAYERED_METADATA">undef</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.TDATA_NUM_BYTES">4</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.TDEST_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.TID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.TUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RGMII.BOARD.ASSOCIATED_PARAM">ETHERNET_BOARD_INTERFACE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.AXI_RXD_ARSTN.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.AXI_RXD_ARSTN.POLARITY">ACTIVE_LOW</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.AXI_RXS_ARSTN.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.AXI_RXS_ARSTN.POLARITY">ACTIVE_LOW</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.AXI_TXC_ARSTN.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.AXI_TXC_ARSTN.POLARITY">ACTIVE_LOW</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.AXI_TXD_ARSTN.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.AXI_TXD_ARSTN.POLARITY">ACTIVE_LOW</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.PHY_RST_N.BOARD.ASSOCIATED_PARAM">PHYRST_BOARD_INTERFACE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.PHY_RST_N.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.PHY_RST_N.POLARITY">ACTIVE_LOW</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.S_AXI_LITE_RESETN.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.RST.S_AXI_LITE_RESETN.POLARITY">ACTIVE_LOW</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.ADDR_WIDTH">18</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.ARUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.AWUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.BUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.CLK_DOMAIN">/clk_wiz_0_clk_out1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.DATA_WIDTH">32</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.FREQ_HZ">100000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_BRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_BURST">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_CACHE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_LOCK">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_PROT">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_QOS">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_REGION">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_RRESP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_WSTRB">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.ID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.MAX_BURST_LENGTH">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_READ_OUTSTANDING">2</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_READ_THREADS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_WRITE_OUTSTANDING">2</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_WRITE_THREADS">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.PROTOCOL">AXI4LITE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.READ_WRITE_MODE">READ_WRITE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.RUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.RUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.SUPPORTS_NARROW_BURST">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.WUSER_BITS_PER_BYTE">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXI.WUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.CLK_DOMAIN">/clk_wiz_0_clk_out1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.FREQ_HZ">100000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.HAS_TKEEP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.HAS_TLAST">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.HAS_TREADY">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.HAS_TSTRB">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.LAYERED_METADATA">undef</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.TDATA_NUM_BYTES">4</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.TDEST_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.TID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.TUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.CLK_DOMAIN">/clk_wiz_0_clk_out1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.FREQ_HZ">100000000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.HAS_TKEEP">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.HAS_TLAST">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.HAS_TREADY">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.HAS_TSTRB">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.INSERT_VIP">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.LAYERED_METADATA">undef</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.PHASE">0.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.TDATA_NUM_BYTES">4</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.TDEST_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.TID_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.TUSER_WIDTH">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.ClockSelection">Sync</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Component_Name">sample_design_axi_ethernet_0_0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.DIFFCLK_BOARD_INTERFACE">Custom</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.ENABLE_AVB">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.ENABLE_LVDS">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.ETHERNET_BOARD_INTERFACE">eth_rgmii</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.EnableAsyncSGMII">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Enable_1588">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Enable_1588_1step">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Enable_Pfc">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Frame_Filter">true</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.GTinEx">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Include_IO">true</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.InstantiateBitslice0">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.MCAST_EXTEND">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.MDIO_BOARD_INTERFACE">eth_mdio_mdc</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Number_of_Table_Entries">4</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.PHYADDR">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.PHYRST_BOARD_INTERFACE">phy_reset_out</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.PHYRST_BOARD_INTERFACE_DUMMY_PORT">Custom</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.PHY_TYPE">RGMII</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.RXCSUM">None</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.RXMEM">4k</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.RXVLAN_STRP">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.RXVLAN_TAG">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.RXVLAN_TRAN">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.SIMULATION_MODE">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Statistics_Counters">true</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Statistics_Reset">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Statistics_Width">64bit</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.SupportLevel">1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.TIMER_CLK_PERIOD">4000</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.TXCSUM">None</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.TXMEM">4k</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.TXVLAN_STRP">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.TXVLAN_TAG">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.TXVLAN_TRAN">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.Timer_Format">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.TransceiverControl">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.USE_BOARD_FLOW">true</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.VERSAL_GT_BOARD_FLOW">0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.axiliteclkrate">100.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.axisclkrate">100.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.drpclkrate">50.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.gt_type">GTH</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.gtlocation">X0Y0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.gtrefclkrate">125</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.gtrefclksrc">clk0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.lvdsclkrate">125</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.processor_mode">true</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.rxlane0_placement">DIFF_PAIR_0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.rxlane1_placement">DIFF_PAIR_1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.rxnibblebitslice0used">false</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.speed_1_2p5">1G</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.tx_in_upper_nibble">true</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.txlane0_placement">DIFF_PAIR_0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PARAM_VALUE.txlane1_placement">DIFF_PAIR_1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.ARCHITECTURE">artix7</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.BASE_BOARD_PART">numato.com:mimas_a7_50t:part0:1.0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.BOARD_CONNECTIONS"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.DEVICE">xc7a50t</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.PACKAGE">fgg484</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.PREFHDL">VERILOG</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.SILICON_REVISION"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.SIMULATOR_LANGUAGE">MIXED</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.SPEEDGRADE">-1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.STATIC_POWER"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.TEMPERATURE_GRADE"/>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.USE_RDI_CUSTOMIZATION">TRUE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="PROJECT_PARAM.USE_RDI_GENERATION">TRUE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.IPCONTEXT">IP_Integrator</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.IPREVISION">7</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.MANAGED">TRUE</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.OUTPUTDIR">../../../../../../project_1.gen/sources_1/bd/sample_design/ip/sample_design_axi_ethernet_0_0</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SELECTEDSIMMODEL"/>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SHAREDDIR">../../ipshared</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SWVERSION">2022.1</spirit:configurableElementValue>
        <spirit:configurableElementValue spirit:referenceId="RUNTIME_PARAM.SYNTHESISFLOW">OOC_HIERARCHICAL</spirit:configurableElementValue>
      </spirit:configurableElementValues>
      <spirit:vendorExtensions>
        <xilinx:componentInstanceExtensions>
          <xilinx:configElementInfos>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.ASSOCIATED_BUSIF" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.ASSOCIATED_PORT" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.ASSOCIATED_RESET" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.CLK_DOMAIN" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.FREQ_HZ" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.FREQ_TOLERANCE_HZ" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.AXIS_CLK.PHASE" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.ASSOCIATED_BUSIF" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.ASSOCIATED_PORT" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.ASSOCIATED_RESET" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.CLK_DOMAIN" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.FREQ_HZ" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.FREQ_TOLERANCE_HZ" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK.PHASE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.ASSOCIATED_BUSIF" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.ASSOCIATED_PORT" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.ASSOCIATED_RESET" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.CLK_DOMAIN" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.FREQ_HZ" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.FREQ_TOLERANCE_HZ" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK90_OUT.PHASE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.ASSOCIATED_BUSIF" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.ASSOCIATED_PORT" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.ASSOCIATED_RESET" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.CLK_DOMAIN" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.FREQ_HZ" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.FREQ_TOLERANCE_HZ" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.GTX_CLK_OUT.PHASE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.ASSOCIATED_BUSIF" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.ASSOCIATED_PORT" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.ASSOCIATED_RESET" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.CLK_DOMAIN" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.FREQ_HZ" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.FREQ_TOLERANCE_HZ" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.REF_CLK.PHASE" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.ASSOCIATED_BUSIF" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.ASSOCIATED_CLKEN" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.ASSOCIATED_PORT" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.ASSOCIATED_RESET" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.CLK_DOMAIN" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.FREQ_HZ" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.FREQ_TOLERANCE_HZ" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.CLK.S_AXI_LITE_CLK.PHASE" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.INTR.INTERRUPT.PortWidth" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.INTR.INTERRUPT.SENSITIVITY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.INTR.MAC_IRQ.PortWidth" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.INTR.MAC_IRQ.SENSITIVITY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.MDIO.BOARD.ASSOCIATED_PARAM" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.MDIO.CAN_DEBUG" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.CLK_DOMAIN" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.FREQ_HZ" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.HAS_TKEEP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.HAS_TLAST" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.HAS_TREADY" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.HAS_TSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.LAYERED_METADATA" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.PHASE" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.TDATA_NUM_BYTES" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.TDEST_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.TID_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXD.TUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.CLK_DOMAIN" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.FREQ_HZ" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.HAS_TKEEP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.HAS_TLAST" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.HAS_TREADY" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.HAS_TSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.LAYERED_METADATA" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.PHASE" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.TDATA_NUM_BYTES" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.TDEST_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.TID_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RXS.TUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.RGMII.BOARD.ASSOCIATED_PARAM" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.RST.AXI_RXD_ARSTN.POLARITY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.RST.AXI_RXS_ARSTN.POLARITY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.RST.AXI_TXC_ARSTN.POLARITY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.RST.AXI_TXD_ARSTN.POLARITY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.RST.PHY_RST_N.BOARD.ASSOCIATED_PARAM" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.RST.PHY_RST_N.POLARITY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.RST.S_AXI_LITE_RESETN.POLARITY" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.ADDR_WIDTH" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.ARUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.AWUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.BUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.CLK_DOMAIN" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.DATA_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.FREQ_HZ" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_BRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_BURST" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_CACHE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_LOCK" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_PROT" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_QOS" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_REGION" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_RRESP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.HAS_WSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.ID_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.MAX_BURST_LENGTH" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_READ_OUTSTANDING" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_READ_THREADS" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_WRITE_OUTSTANDING" xilinx:valueSource="default_prop" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.NUM_WRITE_THREADS" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.PHASE" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.PROTOCOL" xilinx:valueSource="user" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.READ_WRITE_MODE" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.RUSER_BITS_PER_BYTE" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.RUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.SUPPORTS_NARROW_BURST" xilinx:valueSource="ip_propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.WUSER_BITS_PER_BYTE" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXI.WUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.CLK_DOMAIN" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.FREQ_HZ" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.HAS_TKEEP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.HAS_TLAST" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.HAS_TREADY" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.HAS_TSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.LAYERED_METADATA" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.PHASE" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.TDATA_NUM_BYTES" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.TDEST_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.TID_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXC.TUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.CLK_DOMAIN" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.FREQ_HZ" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.HAS_TKEEP" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.HAS_TLAST" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.HAS_TREADY" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.HAS_TSTRB" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.LAYERED_METADATA" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.PHASE" xilinx:valueSource="propagated" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.TDATA_NUM_BYTES" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.TDEST_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.TID_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_TXD.TUSER_WIDTH" xilinx:valueSource="constant" xilinx:valuePermission="bd"/>
            <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ETHERNET_BOARD_INTERFACE" xilinx:valueSource="user"/>
            <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.MDIO_BOARD_INTERFACE" xilinx:valueSource="user"/>
            <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PHYRST_BOARD_INTERFACE" xilinx:valueSource="user"/>
          </xilinx:configElementInfos>
          <xilinx:boundaryDescriptionInfo>
            <xilinx:boundaryDescription xilinx:boundaryDescriptionJSON="{
              &quot;schema&quot;: &quot;xilinx.com:schema:json_boundary:1.0&quot;,
              &quot;boundary&quot;: {
                &quot;ports&quot;: {
                  &quot;s_axi_lite_resetn&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_lite_clk&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0x0&quot; } ],
                  &quot;mac_irq&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;axis_clk&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;axi_txd_arstn&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;axi_txc_arstn&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;axi_rxd_arstn&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;axi_rxs_arstn&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;interrupt&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;gtx_clk&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;phy_rst_n&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;0&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;ref_clk&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;gtx_clk90_out&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;gtx_clk_out&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;s_axi_araddr&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;17&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_arready&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_arvalid&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_awaddr&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;17&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_awready&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_awvalid&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_bready&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_bresp&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_bvalid&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_rdata&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_rready&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_rresp&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;1&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_rvalid&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_wdata&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_wready&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axi_wstrb&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;s_axi_wvalid&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axis_txc_tdata&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axis_txc_tkeep&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;s_axis_txc_tlast&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axis_txc_tready&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;s_axis_txc_tvalid&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;s_axis_txd_tdata&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axis_txd_tkeep&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;s_axis_txd_tlast&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;s_axis_txd_tready&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;s_axis_txd_tvalid&quot;: [ { &quot;direction&quot;: &quot;in&quot; } ],
                  &quot;m_axis_rxd_tdata&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;m_axis_rxd_tkeep&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;m_axis_rxd_tlast&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;m_axis_rxd_tready&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;m_axis_rxd_tvalid&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;m_axis_rxs_tdata&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;31&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;m_axis_rxs_tkeep&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;m_axis_rxs_tlast&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;m_axis_rxs_tready&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;1&quot; } ],
                  &quot;m_axis_rxs_tvalid&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;rgmii_rd&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;rgmii_rx_ctl&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;rgmii_rxc&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;rgmii_td&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;size_left&quot;: &quot;3&quot;, &quot;size_right&quot;: &quot;0&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;rgmii_tx_ctl&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;rgmii_txc&quot;: [ { &quot;direction&quot;: &quot;out&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;mdio_mdc&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;mdio_mdio_i&quot;: [ { &quot;direction&quot;: &quot;in&quot;, &quot;driver_value&quot;: &quot;0&quot; } ],
                  &quot;mdio_mdio_o&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ],
                  &quot;mdio_mdio_t&quot;: [ { &quot;direction&quot;: &quot;out&quot; } ]
                },
                &quot;interfaces&quot;: {
                  &quot;RST.s_axi_lite_resetn&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:reset:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:reset_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;POLARITY&quot;: [ { &quot;value&quot;: &quot;ACTIVE_LOW&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;RST&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_lite_resetn&quot; } ]
                    }
                  },
                  &quot;CLK.s_axi_lite_clk&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:clock:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:clock_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;100000000&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_TOLERANCE_HZ&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;/clk_wiz_0_clk_out1&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_BUSIF&quot;: [ { &quot;value&quot;: &quot;s_axi&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_PORT&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_RESET&quot;: [ { &quot;value&quot;: &quot;s_axi_lite_resetn&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_CLKEN&quot;: [ { &quot;value&quot;: &quot;CE&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;CLK&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_lite_clk&quot; } ]
                    }
                  },
                  &quot;INTR.mac_irq&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:interrupt:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:interrupt_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;SENSITIVITY&quot;: [ { &quot;value&quot;: &quot;EDGE_RISING&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PortWidth&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;INTERRUPT&quot;: [ { &quot;physical_name&quot;: &quot;mac_irq&quot; } ]
                    }
                  },
                  &quot;CLK.axis_clk&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:clock:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:clock_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;100000000&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_TOLERANCE_HZ&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;/clk_wiz_0_clk_out1&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_BUSIF&quot;: [ { &quot;value&quot;: &quot;m_axis_rxd:m_axis_rxs:s_axis_txc:s_axis_txd&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_PORT&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_RESET&quot;: [ { &quot;value&quot;: &quot;axi_rxd_arstn:axi_rxs_arstn:axi_txc_arstn:axi_txd_arstn&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;CLK&quot;: [ { &quot;physical_name&quot;: &quot;axis_clk&quot; } ]
                    }
                  },
                  &quot;RST.axi_txd_arstn&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:reset:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:reset_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;POLARITY&quot;: [ { &quot;value&quot;: &quot;ACTIVE_LOW&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;RST&quot;: [ { &quot;physical_name&quot;: &quot;axi_txd_arstn&quot; } ]
                    }
                  },
                  &quot;RST.axi_txc_arstn&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:reset:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:reset_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;POLARITY&quot;: [ { &quot;value&quot;: &quot;ACTIVE_LOW&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;RST&quot;: [ { &quot;physical_name&quot;: &quot;axi_txc_arstn&quot; } ]
                    }
                  },
                  &quot;RST.axi_rxd_arstn&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:reset:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:reset_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;POLARITY&quot;: [ { &quot;value&quot;: &quot;ACTIVE_LOW&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;RST&quot;: [ { &quot;physical_name&quot;: &quot;axi_rxd_arstn&quot; } ]
                    }
                  },
                  &quot;RST.axi_rxs_arstn&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:reset:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:reset_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;POLARITY&quot;: [ { &quot;value&quot;: &quot;ACTIVE_LOW&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;RST&quot;: [ { &quot;physical_name&quot;: &quot;axi_rxs_arstn&quot; } ]
                    }
                  },
                  &quot;INTR.interrupt&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:interrupt:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:interrupt_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;SENSITIVITY&quot;: [ { &quot;value&quot;: &quot;LEVEL_HIGH&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PortWidth&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;INTERRUPT&quot;: [ { &quot;physical_name&quot;: &quot;interrupt&quot; } ]
                    }
                  },
                  &quot;CLK.gtx_clk&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:clock:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:clock_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;125000000&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_TOLERANCE_HZ&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;/clk_wiz_0_clk_out1&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_BUSIF&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_PORT&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_RESET&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;CLK&quot;: [ { &quot;physical_name&quot;: &quot;gtx_clk&quot; } ]
                    }
                  },
                  &quot;RST.phy_rst_n&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:reset:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:reset_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;POLARITY&quot;: [ { &quot;value&quot;: &quot;ACTIVE_LOW&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;BOARD.ASSOCIATED_PARAM&quot;: [ { &quot;value&quot;: &quot;PHYRST_BOARD_INTERFACE&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;RST&quot;: [ { &quot;physical_name&quot;: &quot;phy_rst_n&quot; } ]
                    }
                  },
                  &quot;CLK.ref_clk&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:clock:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:clock_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;200000000&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_TOLERANCE_HZ&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;/clk_wiz_0_clk_out1&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_BUSIF&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_PORT&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_RESET&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;CLK&quot;: [ { &quot;physical_name&quot;: &quot;ref_clk&quot; } ]
                    }
                  },
                  &quot;CLK.gtx_clk90_out&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:clock:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:clock_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;125000000&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_TOLERANCE_HZ&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;90&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;bd_ec09_mac_0_gtx_clk90_out&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_BUSIF&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_PORT&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_RESET&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;CLK&quot;: [ { &quot;physical_name&quot;: &quot;gtx_clk90_out&quot; } ]
                    }
                  },
                  &quot;CLK.gtx_clk_out&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:signal:clock:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:signal:clock_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;125000000&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_TOLERANCE_HZ&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;bd_ec09_mac_0_gtx_clk_out&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_BUSIF&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_PORT&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ASSOCIATED_RESET&quot;: [ { &quot;value&quot;: &quot;&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;CLK&quot;: [ { &quot;physical_name&quot;: &quot;gtx_clk_out&quot; } ]
                    }
                  },
                  &quot;s_axi&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:aximm:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:aximm_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;memory_map_ref&quot;: &quot;s_axi&quot;,
                    &quot;parameters&quot;: {
                      &quot;DATA_WIDTH&quot;: [ { &quot;value&quot;: &quot;32&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PROTOCOL&quot;: [ { &quot;value&quot;: &quot;AXI4LITE&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;100000000&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ID_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ADDR_WIDTH&quot;: [ { &quot;value&quot;: &quot;18&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;AWUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;ARUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;BUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;READ_WRITE_MODE&quot;: [ { &quot;value&quot;: &quot;READ_WRITE&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_LOCK&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_PROT&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_CACHE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_QOS&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_REGION&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_WSTRB&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_BRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_RRESP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;SUPPORTS_NARROW_BURST&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_READ_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;2&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_WRITE_OUTSTANDING&quot;: [ { &quot;value&quot;: &quot;2&quot;, &quot;value_src&quot;: &quot;default_prop&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;MAX_BURST_LENGTH&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;ip_propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;/clk_wiz_0_clk_out1&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_READ_THREADS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;NUM_WRITE_THREADS&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;RUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;WUSER_BITS_PER_BYTE&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;ARADDR&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_araddr&quot; } ],
                      &quot;ARREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_arready&quot; } ],
                      &quot;ARVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_arvalid&quot; } ],
                      &quot;AWADDR&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_awaddr&quot; } ],
                      &quot;AWREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_awready&quot; } ],
                      &quot;AWVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_awvalid&quot; } ],
                      &quot;BREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_bready&quot; } ],
                      &quot;BRESP&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_bresp&quot; } ],
                      &quot;BVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_bvalid&quot; } ],
                      &quot;RDATA&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_rdata&quot; } ],
                      &quot;RREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_rready&quot; } ],
                      &quot;RRESP&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_rresp&quot; } ],
                      &quot;RVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_rvalid&quot; } ],
                      &quot;WDATA&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_wdata&quot; } ],
                      &quot;WREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_wready&quot; } ],
                      &quot;WSTRB&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_wstrb&quot; } ],
                      &quot;WVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axi_wvalid&quot; } ]
                    }
                  },
                  &quot;s_axis_txd&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:axis:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:axis_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;TDATA_NUM_BYTES&quot;: [ { &quot;value&quot;: &quot;4&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TDEST_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TID_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TREADY&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TSTRB&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TKEEP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TLAST&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;100000000&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;/clk_wiz_0_clk_out1&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;LAYERED_METADATA&quot;: [ { &quot;value&quot;: &quot;undef&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;TDATA&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txd_tdata&quot; } ],
                      &quot;TKEEP&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txd_tkeep&quot; } ],
                      &quot;TLAST&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txd_tlast&quot; } ],
                      &quot;TREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txd_tready&quot; } ],
                      &quot;TVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txd_tvalid&quot; } ]
                    }
                  },
                  &quot;s_axis_txc&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:axis:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:axis_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;slave&quot;,
                    &quot;parameters&quot;: {
                      &quot;TDATA_NUM_BYTES&quot;: [ { &quot;value&quot;: &quot;4&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TDEST_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TID_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TREADY&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TSTRB&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TKEEP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TLAST&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;100000000&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;/clk_wiz_0_clk_out1&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;LAYERED_METADATA&quot;: [ { &quot;value&quot;: &quot;undef&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;TDATA&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txc_tdata&quot; } ],
                      &quot;TKEEP&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txc_tkeep&quot; } ],
                      &quot;TLAST&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txc_tlast&quot; } ],
                      &quot;TREADY&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txc_tready&quot; } ],
                      &quot;TVALID&quot;: [ { &quot;physical_name&quot;: &quot;s_axis_txc_tvalid&quot; } ]
                    }
                  },
                  &quot;m_axis_rxd&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:axis:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:axis_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;TDATA_NUM_BYTES&quot;: [ { &quot;value&quot;: &quot;4&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TDEST_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TID_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TREADY&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TSTRB&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TKEEP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TLAST&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;100000000&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;/clk_wiz_0_clk_out1&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;LAYERED_METADATA&quot;: [ { &quot;value&quot;: &quot;undef&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;TDATA&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxd_tdata&quot; } ],
                      &quot;TKEEP&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxd_tkeep&quot; } ],
                      &quot;TLAST&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxd_tlast&quot; } ],
                      &quot;TREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxd_tready&quot; } ],
                      &quot;TVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxd_tvalid&quot; } ]
                    }
                  },
                  &quot;m_axis_rxs&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:axis:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:axis_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;TDATA_NUM_BYTES&quot;: [ { &quot;value&quot;: &quot;4&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TDEST_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TID_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;TUSER_WIDTH&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TREADY&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TSTRB&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TKEEP&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;HAS_TLAST&quot;: [ { &quot;value&quot;: &quot;1&quot;, &quot;value_src&quot;: &quot;constant&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;FREQ_HZ&quot;: [ { &quot;value&quot;: &quot;100000000&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;long&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;PHASE&quot;: [ { &quot;value&quot;: &quot;0.0&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;float&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;CLK_DOMAIN&quot;: [ { &quot;value&quot;: &quot;/clk_wiz_0_clk_out1&quot;, &quot;value_src&quot;: &quot;propagated&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;LAYERED_METADATA&quot;: [ { &quot;value&quot;: &quot;undef&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;INSERT_VIP&quot;: [ { &quot;value&quot;: &quot;0&quot;, &quot;resolve_type&quot;: &quot;user&quot;, &quot;format&quot;: &quot;long&quot;, &quot;usage&quot;: &quot;simulation.rtl&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;TDATA&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxs_tdata&quot; } ],
                      &quot;TKEEP&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxs_tkeep&quot; } ],
                      &quot;TLAST&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxs_tlast&quot; } ],
                      &quot;TREADY&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxs_tready&quot; } ],
                      &quot;TVALID&quot;: [ { &quot;physical_name&quot;: &quot;m_axis_rxs_tvalid&quot; } ]
                    }
                  },
                  &quot;mdio&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:mdio:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:mdio_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;CAN_DEBUG&quot;: [ { &quot;value&quot;: &quot;false&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;format&quot;: &quot;bool&quot;, &quot;is_static_object&quot;: false } ],
                      &quot;BOARD.ASSOCIATED_PARAM&quot;: [ { &quot;value&quot;: &quot;MDIO_BOARD_INTERFACE&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;MDC&quot;: [ { &quot;physical_name&quot;: &quot;mdio_mdc&quot; } ],
                      &quot;MDIO_I&quot;: [ { &quot;physical_name&quot;: &quot;mdio_mdio_i&quot; } ],
                      &quot;MDIO_O&quot;: [ { &quot;physical_name&quot;: &quot;mdio_mdio_o&quot; } ],
                      &quot;MDIO_T&quot;: [ { &quot;physical_name&quot;: &quot;mdio_mdio_t&quot; } ]
                    }
                  },
                  &quot;rgmii&quot;: {
                    &quot;vlnv&quot;: &quot;xilinx.com:interface:rgmii:1.0&quot;,
                    &quot;abstraction_type&quot;: &quot;xilinx.com:interface:rgmii_rtl:1.0&quot;,
                    &quot;mode&quot;: &quot;master&quot;,
                    &quot;parameters&quot;: {
                      &quot;BOARD.ASSOCIATED_PARAM&quot;: [ { &quot;value&quot;: &quot;ETHERNET_BOARD_INTERFACE&quot;, &quot;value_src&quot;: &quot;user&quot;, &quot;value_permission&quot;: &quot;bd&quot;, &quot;resolve_type&quot;: &quot;generated&quot;, &quot;is_static_object&quot;: false } ]
                    },
                    &quot;port_maps&quot;: {
                      &quot;RD&quot;: [ { &quot;physical_name&quot;: &quot;rgmii_rd&quot; } ],
                      &quot;RX_CTL&quot;: [ { &quot;physical_name&quot;: &quot;rgmii_rx_ctl&quot; } ],
                      &quot;RXC&quot;: [ { &quot;physical_name&quot;: &quot;rgmii_rxc&quot; } ],
                      &quot;TD&quot;: [ { &quot;physical_name&quot;: &quot;rgmii_td&quot; } ],
                      &quot;TX_CTL&quot;: [ { &quot;physical_name&quot;: &quot;rgmii_tx_ctl&quot; } ],
                      &quot;TXC&quot;: [ { &quot;physical_name&quot;: &quot;rgmii_txc&quot; } ]
                    }
                  }
                },
                &quot;memory_maps&quot;: {
                  &quot;aximm_slave_decl&quot;: {
                    &quot;display_name&quot;: &quot;aximm_slave_decl_mem&quot;,
                    &quot;address_blocks&quot;: {
                      &quot;Reg&quot;: {
                        &quot;base_address&quot;: &quot;0&quot;,
                        &quot;range&quot;: &quot;262144&quot;,
                        &quot;display_name&quot;: &quot;Reg&quot;,
                        &quot;description&quot;: &quot;Register Block&quot;,
                        &quot;usage&quot;: &quot;register&quot;,
                        &quot;access&quot;: &quot;read-write&quot;,
                        &quot;registers&quot;: {
                          &quot;RESET_AND_ADDRESS_FILTER_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Reset and Address Filter Register&quot;,
                            &quot;description&quot;: &quot;Reset and Address Filter Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;MCSTREJ&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Reject Receive Multicast Destination Address&quot;,
                                &quot;description&quot;: &quot;Reject Receive Multicast Destination Address.\n  0 – Accept receive multicast destination address Ethernet frames that meet address filtering specified in FMI register and/or the multicast address table.\n  1 – Reject all receive multicast destination address Ethernet frames regardless of FMI register and multicast address table.For each I/O bit programmed as input\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;BCSTREJ&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Reject Receive Broadcast Destination Address&quot;,
                                &quot;description&quot;: &quot;Reject Receive Broadcast Destination Address.\n  0 – Accept receive broadcast destination address Ethernet frames.\n  1 – Reject all receive broadcast destination address Ethernet frames. This is the only method available for blocking broadcast Ethernet frames.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXVTAGMODE&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Transmit VLAN Tag Mode&quot;,
                                &quot;description&quot;: &quot;Transmit VLAN Tag Mode.\n  00 – No VLAN tags are added to transmit frames.\n  01 – VLAN tags are added to all transmit frames.\n  10 – VLAN tags are added to all transmit frames that already have a VLAN tag.\n  11 – VLAN tags are added to select transmit frames that already have VLAN tags.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXVTAGMODE&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Receive VLAN Tag Mode&quot;,
                                &quot;description&quot;: &quot;Receive VLAN Tag Mode.\n  00 – No VLAN tags are added to receive frames.\n  01 – VLAN tags are added to all receive frames.\n  10 – VLAN tags are added to all receive frames that already have a VLAN tag.\n  11 – VLAN tags are added to select receive frames that already have VLAN tags.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXVSTRPMODE&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Transmit VLAN Strip Mode&quot;,
                                &quot;description&quot;: &quot;Transmit VLAN Strip Mode.\n  00 – No VLAN tags are stripped to transmit frames.\n  01 – One VLAN tag is stripped from all transmit frames that have VLAN tags.\n  10 – Reserved.\n  11 – One VLAN tag is stripped from select transmit frames that already have VLAN tags.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXVSTRPMODE&quot;: {
                                &quot;bit_offset&quot;: 9,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Receive VLAN Strip Mode&quot;,
                                &quot;description&quot;: &quot;Receive VLAN Strip Mode.\n  00 – No VLAN tags are stripped to receive frames.\n  01 – One VLAN tag is stripped from all receive frames that have VLAN tags.\n  10 – Reserved.\n  11 – One VLAN tag is stripped from select receive frames that already have VLAN tags.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;NEWFNCENBL&quot;: {
                                &quot;bit_offset&quot;: 11,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;New Functions Enable&quot;,
                                &quot;description&quot;: &quot;New Functions Enable.\n  0 – Disable new functions.\n  1 – Enable new functions if present.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;EMULTIFLTRENBL&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Enhanced Multicast Filter Enable&quot;,
                                &quot;description&quot;: &quot;Enhanced Multicast Filter Enable.\n  0 – Disable enhanced multicast address filtering mode.\n  1 – Enable enhanced multicast address filtering mode if present.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXBADFRMEN&quot;: {
                                &quot;bit_offset&quot;: 14,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Bad Frame Enable&quot;,
                                &quot;description&quot;: &quot;Receive Bad Frame Enable.\n  0 – Normal operation, bad frames are rejected.\n  1 – Bad frames are accepted.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TRANSMIT_PAUSE_FRAME_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmit Pause Frame Register&quot;,
                            &quot;description&quot;: &quot;Transmit Pause Frame Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TPFV&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Transmit Pause Frame Value&quot;,
                                &quot;description&quot;: &quot;Transmit Pause Frame Value.\n  These bits denote the value of the transmit pause frame pause time in units of 512 bit times. If enabled by the FCC register, writing a value into this register initiates the transmission of a single pause frame with the pause value defined in this field.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TRANSMIT_IFG_ADJUST_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmit Inter Frame Gap Adjustment Register&quot;,
                            &quot;description&quot;: &quot;Transmit Inter Frame Gap Adjustment Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;IFGP0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;Transmit Inter Frame Gap Adjustment Value&quot;,
                                &quot;description&quot;: &quot;Transmit Inter Frame Gap Adjustment Value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;INTERRUPT_STATUS_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0xC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Status Register&quot;,
                            &quot;description&quot;: &quot;Interrupt Status Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x40&quot;,
                            &quot;fields&quot;: {
                              &quot;HARDACSCMPLT&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Hard register Access Complete&quot;,
                                &quot;description&quot;: &quot;Hard register Access Complete.\n  0 – Hard register access is not complete.\n  1 – Hard register access is complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;AUTONEG&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Auto-Negotiation Complete&quot;,
                                &quot;description&quot;: &quot;Auto-Negotiation Complete.\n  0 – auto-negotiation not complete.\n  1 – auto-negotiation complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Complete&quot;,
                                &quot;description&quot;: &quot;Receive Complete.\n  0 – no frame received.\n  1 – frame received.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXRJECT&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Frame Rejected&quot;,
                                &quot;description&quot;: &quot;Receive Frame Rejected.\n  0 – no receive frame rejected.\n  1 – receive frame was rejected.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXMEMOVR&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Memory Overrun&quot;,
                                &quot;description&quot;: &quot;Receive Memory Overrun.\n  0 – normal operation, no overflow occurred.\n  1 – receive Memory overflow occurred and data was lost.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit Complete&quot;,
                                &quot;description&quot;: &quot;Transmit Complete.\n  0 – no frame transmitted.\n  1 – frame transmitted.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXDCMLOCK&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive DCM Lock&quot;,
                                &quot;description&quot;: &quot;Receive DCM Lock.\n  0 – RX digital clock manager (DCM) not locked.\n  1 – RX DCM Locked.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;MGTRDY&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Serial Transceiver Ready&quot;,
                                &quot;description&quot;: &quot;Serial Transceiver Ready.\n  0 – Serial transceiver / TEMAC not ready.\n  1 – Serial transceiver / TEMAC ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PHYRSTCMPLT&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PHY Reset Complete&quot;,
                                &quot;description&quot;: &quot;PHY Reset Complete.\n  0 – PHY not ready.\n  1 – PHY ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;INTERRUPT_PENDING_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x10&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Pending Register&quot;,
                            &quot;description&quot;: &quot;Interrupt Pending Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;HARDACSCMPLT&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Hard register Access Complete&quot;,
                                &quot;description&quot;: &quot;Hard register Access Complete.\n  0 – Hard register access is not complete.\n  1 – Hard register access is complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;AUTONEG&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Auto-Negotiation Complete&quot;,
                                &quot;description&quot;: &quot;Auto-Negotiation Complete.\n  0 – auto-negotiation not complete.\n  1 – auto-negotiation complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Complete&quot;,
                                &quot;description&quot;: &quot;Receive Complete.\n  0 – no frame received.\n  1 – frame received.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXRJECT&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Frame Rejected&quot;,
                                &quot;description&quot;: &quot;Receive Frame Rejected.\n  0 – no receive frame rejected.\n  1 – receive frame was rejected.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXMEMOVR&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Memory Overrun&quot;,
                                &quot;description&quot;: &quot;Receive Memory Overrun.\n  0 – normal operation, no overflow occurred.\n  1 – receive Memory overflow occurred and data was lost.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit Complete&quot;,
                                &quot;description&quot;: &quot;Transmit Complete.\n  0 – no frame transmitted.\n  1 – frame transmitted.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXDCMLOCK&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive DCM Lock&quot;,
                                &quot;description&quot;: &quot;Receive DCM Lock.\n  0 – RX digital clock manager (DCM) not locked.\n  1 – RX DCM Locked.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;MGTRDY&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MGT Ready&quot;,
                                &quot;description&quot;: &quot;MGT Ready.\n  0 – Serial transceiver / TEMAC not ready.\n  1 – Serial transceiver / TEMAC ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PHYRSTCMPLT&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PHY Reset Complete&quot;,
                                &quot;description&quot;: &quot;PHY Reset Complete.\n  0 – PHY not ready.\n  1 – PHY ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;INTERRUPT_ENABLE_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x14&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Enable Register&quot;,
                            &quot;description&quot;: &quot;Interrupt Enable Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;HARDACSCMPLT&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Hard register Access Complete&quot;,
                                &quot;description&quot;: &quot;Hard register Access Complete.\n  0 – Hard register access is not complete.\n  1 – Hard register access is complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;AUTONEG&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Auto-Negotiation Complete&quot;,
                                &quot;description&quot;: &quot;Auto-Negotiation Complete.\n  0 – auto-negotiation not complete.\n  1 – auto-negotiation complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Complete&quot;,
                                &quot;description&quot;: &quot;Receive Complete.\n  0 – no frame received.\n  1 – frame received.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXRJECT&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Frame Rejected&quot;,
                                &quot;description&quot;: &quot;Receive Frame Rejected.\n  0 – no receive frame rejected.\n  1 – receive frame was rejected.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXMEMOVR&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Memory Overrun&quot;,
                                &quot;description&quot;: &quot;Receive Memory Overrun.\n  0 – normal operation, no overflow occurred.\n  1 – receive Memory overflow occurred and data was lost.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit Complete&quot;,
                                &quot;description&quot;: &quot;Transmit Complete.\n  0 – no frame transmitted.\n  1 – frame transmitted.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXDCMLOCK&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive DCM Lock&quot;,
                                &quot;description&quot;: &quot;Receive DCM Lock.\n  0 – RX digital clock manager (DCM) not locked.\n  1 – RX DCM Locked.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;MGTRDY&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MGT Ready&quot;,
                                &quot;description&quot;: &quot;MGT Ready.\n  0 – Serial transceiver / TEMAC not ready.\n  1 – Serial transceiver / TEMAC ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PHYRSTCMPLT&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PHY Reset Complete&quot;,
                                &quot;description&quot;: &quot;PHY Reset Complete.\n  0 – PHY not ready.\n  1 – PHY ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TRANSMIT_VLAN_TAG_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x18&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmit VLAN Tag Register&quot;,
                            &quot;description&quot;: &quot;Transmit VLAN Tag Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;VID&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 12,
                                &quot;display_name&quot;: &quot;VLAN identifier&quot;,
                                &quot;description&quot;: &quot;VLAN identifier.\n  Uniquely identifies the VLAN to which the frame belongs.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;CFI&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Canonical Format Indicator&quot;,
                                &quot;description&quot;: &quot;Canonical Format Indicator.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PRIORITY&quot;: {
                                &quot;bit_offset&quot;: 13,
                                &quot;bit_width&quot;: 3,
                                &quot;display_name&quot;: &quot;User Priority&quot;,
                                &quot;description&quot;: &quot;User Priority.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TPID&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Tag Protocol Identifier&quot;,
                                &quot;description&quot;: &quot;Tag Protocol Identifier.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RECEIVE_VLAN_TAG_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x1C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Receive VLAN Tag Register&quot;,
                            &quot;description&quot;: &quot;Receive VLAN Tag Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;VID&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 12,
                                &quot;display_name&quot;: &quot;VLAN identifier&quot;,
                                &quot;description&quot;: &quot;VLAN identifier.\n  Uniquely identifies the VLAN to which the frame belongs.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;CFI&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Canonical Format Indicator&quot;,
                                &quot;description&quot;: &quot;Canonical Format Indicator.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PRIORITY&quot;: {
                                &quot;bit_offset&quot;: 13,
                                &quot;bit_width&quot;: 3,
                                &quot;display_name&quot;: &quot;User Priority&quot;,
                                &quot;description&quot;: &quot;User Priority.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TPID&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Tag Protocol Identifier&quot;,
                                &quot;description&quot;: &quot;Tag Protocol Identifier.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;UNICAST_ADDRESS_WORD_LOWER_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x20&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Unicast Address Word Lower Register&quot;,
                            &quot;description&quot;: &quot;Unicast Address Word Lower Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;UNICASTADDR&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Unicast Address&quot;,
                                &quot;description&quot;: &quot;Unicast Address.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;UNICAST_ADDRESS_WORD_UPPER_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x24&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Unicast Address Word Upper Register&quot;,
                            &quot;description&quot;: &quot;Unicast Address Word Upper Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;UNICASTADDR&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Unicast Address&quot;,
                                &quot;description&quot;: &quot;Unicast Address.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;VLAN_TPID_WORD0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x28&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;VLAN TPID Word 0 Register&quot;,
                            &quot;description&quot;: &quot;VLAN TPID Word 0 Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TPID0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TPID Value 0&quot;,
                                &quot;description&quot;: &quot;TPID Value 0.\n  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TPID1&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TPID Value 1&quot;,
                                &quot;description&quot;: &quot;TPID Value 1.\n  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;VLAN_TPID_WORD1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;VLAN TPID Word 1 Register&quot;,
                            &quot;description&quot;: &quot;VLAN TPID Word 1 Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TPID2&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TPID Value 2&quot;,
                                &quot;description&quot;: &quot;TPID Value 2.\n  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TPID3&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TPID Value 3&quot;,
                                &quot;description&quot;: &quot;TPID Value 3.\n  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PCS_PMA_TEMAC_STATUS_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x30&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;PCS PMA TEMAC Status Register&quot;,
                            &quot;description&quot;: &quot;PCS PMA TEMAC Status Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;LINKSTATUS&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Link Status&quot;,
                                &quot;description&quot;: &quot;Link Status.\n  0 – No Link.\n  1 – Link is up.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;LINKSYNC&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Link Synchronization&quot;,
                                &quot;description&quot;: &quot;Link Synchronization.\n  0 – Synchronization failed.\n  1 – Synchronization obtained.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RUDI_C&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RUDI(/C/)&quot;,
                                &quot;description&quot;: &quot;RUDI(/C/).\n  0 – /C/ ordered sets(AN Configuration sequences) not there.\n  1 – Receiving /C/ ordered sets.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RUDI_I&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RUDI(/I/)&quot;,
                                &quot;description&quot;: &quot;RUDI(/I/).\n  0 – /I/ ordered sets(Idles) not there.\n  1 – Receiving /I/ ordered sets.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RUDI_INVLD&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RUDI(/INVALID/)&quot;,
                                &quot;description&quot;: &quot;RUDI(/INVALID/).\n  0 – No invalid data.\n  1 – Receiving invalid data while receiving/C/ or/I/ ordered set.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RXDISPERR&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Disparity Error&quot;,
                                &quot;description&quot;: &quot;Receive Disparity Error.\n  0 – No running disparity error.\n  1 – Receiving running disparity error during the 8B/10B decoding function.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RXNOTINTABLE&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Not In Table&quot;,
                                &quot;description&quot;: &quot;Receive Not In Table.\n  0 – No receive not in table error.\n  1 – Receiving code group which is not recognized from the 8B/10B coding tables.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PHYLINKSTATUS&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PHY Link Status (SGMII only)&quot;,
                                &quot;description&quot;: &quot;PHY Link Status (SGMII only).   0 – Indicates that it has not linked with its link partner.   1 – Indicates that the PHY has obtained a link with its link partner. When operating in 1000BASE-X mode this bit remains Low and should be ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RMTFLTENC&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Remote Fault Encoding (1000BASE-X only)&quot;,
                                &quot;description&quot;: &quot;Remote Fault Encoding (1000BASE-X only).   00 – No error, link OK.   01 - Offline.   10 - Link failure.   11 - Auto-Negotiation error. This signal has no significance when the core is in SGMII mode with PHY side implementation and indicates 00.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;SPEED&quot;: {
                                &quot;bit_offset&quot;: 10,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Speed&quot;,
                                &quot;description&quot;: &quot;This signal indicates the speed negotiated and is only valid when Auto-Negotiation is enabled. The signal encoding is:   11 - Reserved.   10 - 1000 Mb/s.   01 - 100 Mb/s.   00 – 10 Mb/s.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;DUPLEX&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Duplex Mode&quot;,
                                &quot;description&quot;: &quot;This bit indicates the Duplex mode negotiated with the link partner.\n  1 - Full-Duplex.\n  0 - Half-Duplex.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RMTFLT&quot;: {
                                &quot;bit_offset&quot;: 13,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Remote Fault (1000BASE-X only)&quot;,
                                &quot;description&quot;: &quot;Remote Fault (1000BASE-X only)\n  1 - Remote fault is detected.\n  0 - No remote fault.\nThis signal has no significance in SGMII PHY mode.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RECEIVED_BYTES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x200&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Received Bytes Counter Word 0&quot;,
                            &quot;description&quot;: &quot;Received Bytes Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RECEIVED_BYTES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Received Bytes Counter Word 0&quot;,
                                &quot;description&quot;: &quot;Received Bytes Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RECEIVED_BYTES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x204&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Received Bytes Counter Word 1&quot;,
                            &quot;description&quot;: &quot;Received Bytes Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RECEIVED_BYTES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Received Bytes Counter Word 1&quot;,
                                &quot;description&quot;: &quot;Received Bytes Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TRANSMITTED_BYTES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x208&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmitted Bytes Counter Word 0&quot;,
                            &quot;description&quot;: &quot;Transmitted Bytes Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TRANSMITTED_BYTES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Transmitted Bytes Counter Word 0&quot;,
                                &quot;description&quot;: &quot;Transmitted Bytes Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TRANSMITTED_BYTES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x20C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmitted Bytes Counter Word 1&quot;,
                            &quot;description&quot;: &quot;Transmitted Bytes Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TRANSMITTED_BYTES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Transmitted Bytes Counter Word 1&quot;,
                                &quot;description&quot;: &quot;Transmitted Bytes Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;UNDERSIZE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x210&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Undersize Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;Undersize Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;UNDERSIZE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Undersize Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;Undersize Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;UNDERSIZE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x214&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Undersize Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;Undersize Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;UNDERSIZE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Undersize Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;Undersize Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;FRAGMENT_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x218&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Fragment Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;Fragment Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;FRAGMENT_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Fragment Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;Fragment Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;FRAGMENT_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x21C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Fragment Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;Fragment Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;FRAGMENT_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Fragment Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;Fragment Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_64BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x220&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 64-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 64-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_64BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 64-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 64-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_64BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x224&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 64-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 64-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_64BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 64-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 64-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x228&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 65-127-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 65-127-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_65_127_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 65-127-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 65-127-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x22C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 65-127-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 65-127-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_65_127_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 65-127-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 65-127-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x230&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 128-255-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 128-255-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_128_255_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 128-255-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 128-255-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x234&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 128-255-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 128-255-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_128_255_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 128-255-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 128-255-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x238&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 256-511-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 256-511-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_256_511_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 256-511-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 256-511-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x23C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 256-511-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 256-511-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_256_511_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 256-511-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 256-511-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x240&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 512-1023-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 512-1023-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 512-1023-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 512-1023-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x244&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 512-1023-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 512-1023-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 512-1023-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 512-1023-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x248&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x24C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x250&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Oversize Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Oversize Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_OVERSIZE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Oversize Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Oversize Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x254&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Oversize Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Oversize Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_OVERSIZE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Oversize Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Oversize Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_64BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x258&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 64-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 64-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_64BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 64-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 64-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_64BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x25C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 64-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 64-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_64BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 64-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 64-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x260&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 65-127-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 65-127-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_65_127_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 65-127-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 65-127-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x264&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 65-127-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 65-127-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_65_127_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 65-127-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 65-127-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x268&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 128-255-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 128-255-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_128_255_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 128-255-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 128-255-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x26C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 128-255-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 128-255-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_128_255_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 128-255-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 128-255-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x270&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 256-511-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 256-511-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_256_511_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 256-511-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 256-511-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x274&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 256-511-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 256-511-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_256_511_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 256-511-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 256-511-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x278&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 512-1023-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 512-1023-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 512-1023-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 512-1023-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x27C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 512-1023-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 512-1023-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 512-1023-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 512-1023-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x280&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x284&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x288&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Oversize Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Oversize Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_OVERSIZE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Oversize Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Oversize Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x28C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Oversize Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Oversize Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_OVERSIZE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Oversize Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Oversize Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x290&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x294&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x298&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Frame Check Sequence Errors Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Frame Check Sequence Errors Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Frame Check Sequence Errors Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Frame Check Sequence Errors Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x29C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Frame Check Sequence Errors Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Frame Check Sequence Errors Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Frame Check Sequence Errors Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Frame Check Sequence Errors Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2A0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Broadcast Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Broadcast Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Broadcast Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Broadcast Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2A4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Broadcast Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Broadcast Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Broadcast Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Broadcast Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2A8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Multicast Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Multicast Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Multicast Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Multicast Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2AC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Multicast Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Multicast Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Multicast Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Multicast Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2B0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Control Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Control Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Control Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Control Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2B4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Control Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Control Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Control Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Control Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2B8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2BC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2C0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2C4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2C8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Pause Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Pause Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Pause Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Pause Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2CC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Pause Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Pause Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Pause Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Pause Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2D0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Bad Opcode Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Bad Opcode Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Bad Opcode Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Bad Opcode Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2D4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Bad Opcode Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Bad Opcode Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Bad Opcode Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Bad Opcode Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2D8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2DC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2E0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Broadcast Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Broadcast Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Broadcast Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Broadcast Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2E4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Broadcast Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Broadcast Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Broadcast Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Broadcast Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2E8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Multicast Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Multicast Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Multicast Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Multicast Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2EC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Multicast Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Multicast Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Multicast Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Multicast Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_UNDERRUN_ERRORS_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2F0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Underrun Errors Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Underrun Errors Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_UNDERRUN_ERRORS_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Underrun Errors Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Underrun Errors Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_UNDERRUN_ERRORS_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2F4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Underrun Errors Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Underrun Errors Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_UNDERRUN_ERRORS_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Underrun Errors Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Underrun Errors Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2F8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Control Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Control Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Control Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Control Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2FC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Control Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Control Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Control Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Control Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x300&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good VLAN Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good VLAN Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good VLAN Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good VLAN Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x304&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good VLAN Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good VLAN Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good VLAN Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good VLAN Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x308&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Pause Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Pause Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Pause Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Pause Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x30C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Pause Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Pause Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Pause Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Pause Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x310&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Single Collision Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Single Collision Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Single Collision Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Single Collision Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x314&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Single Collision Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Single Collision Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Single Collision Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Single Collision Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x318&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Multiple Collision Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Multiple Collision Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Multiple Collision Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Multiple Collision Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x31C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Multiple Collision Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Multiple Collision Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Multiple Collision Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Multiple Collision Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_DEFERRED_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x320&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Deferred Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Deferred Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_DEFERRED_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Deferred Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Deferred Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_DEFERRED_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x324&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Deferred Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Deferred Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_DEFERRED_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Deferred Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Deferred Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_LATE_COLL_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x328&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Late Collision Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Late Collision Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_LATE_COLL_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Late Collision Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Late Collision Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_LATE_COLL_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x32C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Late Collision Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Late Collision Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_LATE_COLL_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Late Collision Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Late Collision Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_EXCESS_COLL_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x330&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Excess Collision Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Excess Collision Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_EXCESS_COLL_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Excess Collision Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Excess Collision Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_EXCESS_COLL_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x334&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Excess Collision Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Excess Collision Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_EXCESS_COLL_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Excess Collision Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Excess Collision Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_EXCESS_DEF_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x338&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Excess Deferral Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Excess Deferral Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_EXCESS_DEF_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Excess Deferral Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Excess Deferral Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_EXCESS_DEF_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x33C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Excess Deferral Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Excess Deferral Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_EXCESS_DEF_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Excess Deferral Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Excess Deferral Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_ALIGNMENT_ERR_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x340&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Alignment Errors Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Alignment Errors Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_ALIGNMENT_ERR_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Alignment Errors Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Alignment Errors Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_ALIGNMENT_ERR_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x344&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Alignment Errors Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Alignment Errors Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_ALIGNMENT_ERR_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Alignment Errors Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Alignment Errors Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_PFC_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x348&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX PFC Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX PFC Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_PFC_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX PFC Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX PFC Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_PFC_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x34C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX PFC Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX PFC Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_PFC_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX PFC Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX PFC Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_PFC_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x350&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX PFC Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX PFC Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_PFC_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX PFC Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX PFC Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_PFC_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x354&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX PFC Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX PFC Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_PFC_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX PFC Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX PFC Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_CONF_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x400&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Pause frame MAC Source Address[31:0]&quot;,
                            &quot;description&quot;: &quot;Pause frame MAC Source Address[31:0]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFFFFFFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_CONF_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Pause frame MAC Source Address[31:0]&quot;,
                                &quot;description&quot;: &quot;Pause frame MAC Source Address[31:0].\n  The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RX_CONF_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x404&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Receiver Configuration Word 1&quot;,
                            &quot;description&quot;: &quot;Receiver Configuration Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x1000FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PAUSE_FRM_MAC_SA&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause frame MAC Source Address[47:32]&quot;,
                                &quot;description&quot;: &quot;Pause frame MAC Source Address[47:32].\n  Refer the RX_CONF_WORD_0 register description.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;CTL_FRM_LEN_CHK_DISABLE&quot;: {
                                &quot;bit_offset&quot;: 24,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Control Frame Length Check Disable&quot;,
                                &quot;description&quot;: &quot;Control Frame Length Check Disable.\n  When this bit is set to 1, the core does not mark control frames as bad if they are greater than the minimum frame length.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;LT_ERR_CHK_DISABLE&quot;: {
                                &quot;bit_offset&quot;: 25,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Length/Type Error Check Disable&quot;,
                                &quot;description&quot;: &quot;Length/Type Error Check Disable.\n  1 - Core does not perform the length/type field error checks.\n  0 - Core performs the length/type field error checks. Normal operation.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;HALF_DUPLEX&quot;: {
                                &quot;bit_offset&quot;: 26,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Half Duplex&quot;,
                                &quot;description&quot;: &quot;Half Duplex.\n  1 - Half Duplex.\n  0 - Full Duplex.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;VLAN_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 27,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;VLAN Enable&quot;,
                                &quot;description&quot;: &quot;VLAN Enable.\n  When this bit is set to 1, VLAN tagged frames are accepted by the receiver.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 28,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receiver Enable&quot;,
                                &quot;description&quot;: &quot;Receiver Enable.\n  If set to 1, the receiver block is operational. If set to 0, the block ignores activity on the physical interface RX port.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;INBAND_FCS_ENBALE&quot;: {
                                &quot;bit_offset&quot;: 29,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;In-band FCS Enable&quot;,
                                &quot;description&quot;: &quot;In-band FCS Enable.\n  1 - MAC receiver passes the FCS field up to the client.\n  0 - Client is not passed to the FCS.\nIn both cases, the FCS is verified on the frame.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;JUMBO_FRAME_ENBALE&quot;: {
                                &quot;bit_offset&quot;: 30,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Jumbo Frame Enable&quot;,
                                &quot;description&quot;: &quot;Jumbo Frame Enable.\n  1 - MAC receiver accepts frames over the specified IEEE 802.3-2008 maximum legal length.\n  0 - MAC only accepts frames up to the specified maximum.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RESET&quot;: {
                                &quot;bit_offset&quot;: 31,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Reset&quot;,
                                &quot;description&quot;: &quot;Reset.\n  When this bit is set to 1, the receiver is reset. The bit then automatically reverts to 0. This reset also sets all of the receiver configuration registers to their default values.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_CONF_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x408&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmitter Configuration Word&quot;,
                            &quot;description&quot;: &quot;Transmitter Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x10000000&quot;,
                            &quot;fields&quot;: {
                              &quot;IFG_ADJUST_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 25,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Interframe Gap Adjust Enable&quot;,
                                &quot;description&quot;: &quot;Interframe Gap Adjust Enable.\n  If 1, the transmitter reads the value on the port tx_ifg_delay at the start of frame transmission and adjusts the interframe gap following the frame accordingly. If 0, the transmitter outputs a minimum interframe gap of at least twelve clock cycles, as specified in IEEE 802.3-2008.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;HALF_DUPLEX&quot;: {
                                &quot;bit_offset&quot;: 26,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Half Duplex&quot;,
                                &quot;description&quot;: &quot;Half Duplex.\n  1 - Half Duplex.\n  0 - Full Duplex.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;VLAN_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 27,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;VLAN Enable&quot;,
                                &quot;description&quot;: &quot;VLAN Enable.\n  When this bit is set to 1, the transmitter recognizes the transmission of VLAN tagged frames.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 28,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit Enable&quot;,
                                &quot;description&quot;: &quot;Transmit Enable.\n  1 - Transmitter is operational.\n  0 - Transmitter is disabled.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;INBAND_FCS_ENBALE&quot;: {
                                &quot;bit_offset&quot;: 29,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;In-band FCS Enable&quot;,
                                &quot;description&quot;: &quot;In-band FCS Enable.\n  1 - MAC transmitter expects the FCS field to be passed in by the client.\n  0 - MAC transmitter appends padding as required, computes the FCS and appends it to the frame.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;JUMBO_FRAME_ENBALE&quot;: {
                                &quot;bit_offset&quot;: 30,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Jumbo Frame Enable&quot;,
                                &quot;description&quot;: &quot;Jumbo Frame Enable.\n  1 - MAC transmitter sends frames that are greater than the specified IEEE 802.3-2008 maximum legal length.\n  0 - MAC only sends frames up to the specified maximum.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RESET&quot;: {
                                &quot;bit_offset&quot;: 31,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Reset&quot;,
                                &quot;description&quot;: &quot;Reset.\n  When this bit is set to 1, the transmitter is reset. The bit then automatically reverts to 0. This reset also sets all of the transmitter configuration registers to their default values.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FLOW_CONTROL_CONF_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x40C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Flow Control Configuration Word&quot;,
                            &quot;description&quot;: &quot;Flow Control Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x6010FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_P0_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 0 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 0 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 0 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p0_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P1_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 1 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 1 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 1 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p1_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P2_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 2 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 2 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 2 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p2_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P3_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 3 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 3 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 3 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p3_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P4_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 4 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 4 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 4 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p4_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P5_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 5 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 5 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 5 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p5_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P6_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 6 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 6 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 6 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p6_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P7_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 7 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 7 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 7 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p7_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P0_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 0 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 0 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p0_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P1_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 9,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 1 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 1 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p1_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P2_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 10,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 2 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 2 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p2_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P3_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 11,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 3 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 3 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p3_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P4_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 4 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 4 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p4_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P5_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 13,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 5 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 5 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p5_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P6_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 14,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 6 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 6 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p6_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P7_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 15,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 7 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 7 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p7_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_AUTO_XON&quot;: {
                                &quot;bit_offset&quot;: 20,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Auto XON&quot;,
                                &quot;description&quot;: &quot;TX Auto XON.\n  Only present when the core has been generated with PFC support – this bit defaults to 0 if PFC is not supported. Send a flow control or PFC frame with the relevant quanta set to zero (XON frame) when the relevant, enabled pause request is dropped.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PFC_ENABLE_RX&quot;: {
                                &quot;bit_offset&quot;: 25,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Priority pause flow control enable (RX)&quot;,
                                &quot;description&quot;: &quot;Priority pause flow control enable (RX).\n  Only present when the core has been generated with PFC support. When this bit is 1, received PFC frames assert the relevant, enabled RX PFC tvalid outputs as described in Receiving a PFC Frame. When this bit is 0, received PFC frames are ignored and passed to the client. This mode should not be enabled at the same time as Flow Control (RX) (Bit[29]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PFC_ENABLE_TX&quot;: {
                                &quot;bit_offset&quot;: 26,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Priority pause flow control enable (TX)&quot;,
                                &quot;description&quot;: &quot;Priority pause flow control enable (TX).\n  Only present when the core has been generated with PFC support. When this bit is 1, asserting an enabled TX PFC tvalid signal results in a PFC frame being sent from the transmitter. When this bit is 0,the TX PFC tvalid inputs are ignored. This mode should not be enabled at the same time as Flow Control (TX) (Bit[30]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;FLOW_CONTROL_ENABLE_RX&quot;: {
                                &quot;bit_offset&quot;: 29,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Flow Control Enable (RX)&quot;,
                                &quot;description&quot;: &quot;Flow Control Enable (RX).\n  When this bit is 1, received flow control frames inhibit the transmitter operation as described in Receiving a Pause Frame. When this bit is 0, received flow control frames are always passed up to the client. This mode should not be enabled at the same time as PFC (Bit[25]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;FLOW_CONTROL_ENABLE_TX&quot;: {
                                &quot;bit_offset&quot;: 30,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Flow Control Enable (TX)&quot;,
                                &quot;description&quot;: &quot;Flow Control Enable (TX).\n  When this bit is 1, asserting the pause_req signal sends a flow control frame out from the transmitter as described in Transmitting a Pause Control Frame. When this bit is 0, asserting the pause_req signal has no effect. This mode should not be enabled at the same time as PFC (Bit[26]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MAC_SPEED_CONF_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x410&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MAC Speed Configuration Word&quot;,
                            &quot;description&quot;: &quot;MAC Speed Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x80000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MAC_SPEED_CONF&quot;: {
                                &quot;bit_offset&quot;: 30,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;MAC Speed Configuration&quot;,
                                &quot;description&quot;: &quot;MAC Speed Configuration.\n  00 - 10 Mb/s\n  01 - 100 Mb/s\n  10 - 1 Gb/s\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RX_MAC_FRAME_CONF_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x414&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Max Frame Configuration Word&quot;,
                            &quot;description&quot;: &quot;RX Max Frame Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x000007D0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_MAX_FRAME_LENGTH&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 15,
                                &quot;display_name&quot;: &quot;RX Max Frame Length&quot;,
                                &quot;description&quot;: &quot;RX Max Frame Length.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_MAX_FRAME_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Max Frame Enable&quot;,
                                &quot;description&quot;: &quot;RX Max Frame Enable.\n  When Low, the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High, the MAC allows frames up to RX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_MAC_FRAME_CONF_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x418&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Max Frame Configuration Word&quot;,
                            &quot;description&quot;: &quot;TX Max Frame Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x000007D0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_MAX_FRAME_LENGTH&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 15,
                                &quot;display_name&quot;: &quot;TX Max Frame Length&quot;,
                                &quot;description&quot;: &quot;TX Max Frame Length.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_MAX_FRAME_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Max Frame Enable&quot;,
                                &quot;description&quot;: &quot;TX Max Frame Enable.\n  When Low the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High the MAC allows frames up to TX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_TIMESTAMP_ADJUST_CONTROL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x41C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmitter Timestamp Adjust Control Register&quot;,
                            &quot;description&quot;: &quot;Transmitter Timestamp Adjust Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x000000D3&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_LATENCY_ADJUST&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TX latency adjust value&quot;,
                                &quot;description&quot;: &quot;TX latency adjust value.\n  In ToD mode: This value is in units of nanoseconds and is initialized to reflect the delay following the timestamping position through the MAC, 1000BASE-X FPGA logic, and GTX transceiver components.\n  In Correction Field Format: The default value is 387ns decimal value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_TS_CORRECTION_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmitter Timestamp Correction Enable&quot;,
                                &quot;description&quot;: &quot;Transmitter Timestamp Correction Enable.\n  0 - Transmitter timestamp is not adjusted.\n  1 - Transmitter timestamp is adjusted by the “TX latency adjust value”.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_0_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x480&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 0 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 0 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 0 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 0 value.\n  This register is only present when PFC is enabled at core customization time. When enabled, this register sets the quanta value to be inserted in the PFC frame for this priority.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 0 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 0 refresh value.\n  This register is only present when PFC is enabled at the core customization time. When enabled, this register controls how frequently a PF quanta is refreshed by the transmission of a new PFC frame. When a refresh occurs, all currently active (TX PFC tvalid is High and enabled) priorities are refreshed.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_1_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x484&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 1 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 1 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 1 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 1 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 1 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 1 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_2_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x488&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 2 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 2 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 2 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 2 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 2 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 2 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_3_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x48C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 3 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 3 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 3 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 3 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 3 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 3 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_4_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x490&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 4 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 4 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 4 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 4 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 4 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 4 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_5_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x494&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 5 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 5 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 5 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 5 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 5 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 5 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_6_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x498&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 6 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 6 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 6 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta value 6.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 6 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 6 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_7_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x49C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 7 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 7 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 7 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 7 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 7 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 7 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;LEGACY_PAUSE_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x4A0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Legacy Pause Refresh Register&quot;,
                            &quot;description&quot;: &quot;Legacy Pause Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF000000&quot;,
                            &quot;fields&quot;: {
                              &quot;PAUSE_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta refresh value.\n  This register is only present when PFC is enabled at the core customization time. When PFC is supported, the 802.3 pause request can also support XON/XOFF Extended Functionality. This controls the frequency of the automatic pause refresh.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;ID_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x4F8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;ID Register&quot;,
                            &quot;description&quot;: &quot;ID Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;PATCH_LEVEL&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;Patch Level&quot;,
                                &quot;description&quot;: &quot;Patch Level.\n  0 - No patch.\n  1 - Rev1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;MINOR_REV&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;Minor Rev&quot;,
                                &quot;description&quot;: &quot;Minor Rev.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;MAJOR_REV&quot;: {
                                &quot;bit_offset&quot;: 24,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;Major Rev&quot;,
                                &quot;description&quot;: &quot;Minor Rev.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;ABILITY_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x4FC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Ability Register&quot;,
                            &quot;description&quot;: &quot;Ability Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0000070F&quot;,
                            &quot;fields&quot;: {
                              &quot;TEN_M_ABILITY&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;10M_Ability&quot;,
                                &quot;description&quot;: &quot;10M_Ability.\n  If set, the core is 10M capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;HUNDRED_M_ABILITY&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;100M_Ability&quot;,
                                &quot;description&quot;: &quot;100M_Ability.\n  If set, the core is 100M capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;ONE_G_ABILITY&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;1G_Ability&quot;,
                                &quot;description&quot;: &quot;1G_Ability.\n  If set, the core is 1G capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;TWO_P_FIVE_G_ABILITY&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;2_5G_Ability&quot;,
                                &quot;description&quot;: &quot;2_5G_Ability.\n  If set, the core is 2.5G capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;STATISTICS_COUNTERS_AVAILABLE&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Statistics Counters available&quot;,
                                &quot;description&quot;: &quot;Statistics Counters available.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;HALF_DUPLEX_CAPABLE&quot;: {
                                &quot;bit_offset&quot;: 9,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Half duplex capable&quot;,
                                &quot;description&quot;: &quot;Half duplex capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;FRAME_FILTER_AVAILABLE&quot;: {
                                &quot;bit_offset&quot;: 10,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Frame filter available&quot;,
                                &quot;description&quot;: &quot;Frame filter available.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PFC_SUPPORT&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PFC Support&quot;,
                                &quot;description&quot;: &quot;PFC Support.\n  This bit indicates that the core has been generated with PFC support.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;MDIO_SETUP_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x500&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIO Setup Word&quot;,
                            &quot;description&quot;: &quot;MDIO Setup Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0000070F&quot;,
                            &quot;fields&quot;: {
                              &quot;CLOCK_DIVIDE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 6,
                                &quot;display_name&quot;: &quot;Clock Divide&quot;,
                                &quot;description&quot;: &quot;Clock Divide.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;MDIO_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO Enable&quot;,
                                &quot;description&quot;: &quot;MDIO Enable.   1 - MDIO interface can be used to access attached PHY devices.    0 - MDIO interface is disabled and the MDIO signals remain inactive.  A write to this bit only takes effect if Clock Divide is set to a nonzero value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MDIO_CONTROL_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x504&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIO Control Word&quot;,
                            &quot;description&quot;: &quot;MDIO Control Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO_READY&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO ready&quot;,
                                &quot;description&quot;: &quot;MDIO ready.\n  When set the MDIO is enabled and ready for a new transfer.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;INITIATE&quot;: {
                                &quot;bit_offset&quot;: 11,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Initiate&quot;,
                                &quot;description&quot;: &quot;Initiate.\n  Writing a 1 to this bit starts an MDIO transfer.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;write-only&quot;
                              },
                              &quot;TX_OP&quot;: {
                                &quot;bit_offset&quot;: 14,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;TX_OP&quot;,
                                &quot;description&quot;: &quot;TX_OP.\n  01 - Write Access.\n  10 - Read Access.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_REGAD&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 5,
                                &quot;display_name&quot;: &quot;TX_REGAD&quot;,
                                &quot;description&quot;: &quot;TX_REGAD.\n  This controls the register address being accessed.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_PHYAD&quot;: {
                                &quot;bit_offset&quot;: 24,
                                &quot;bit_width&quot;: 5,
                                &quot;display_name&quot;: &quot;TX_PHYAD&quot;,
                                &quot;description&quot;: &quot;TX_PHYAD.\n  This controls the PHY address being accessed.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MDIO_WRITE_DATA_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x508&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIO Write Data&quot;,
                            &quot;description&quot;: &quot;MDIO Write Data&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO_WRITE_DATA&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO_Write_Data&quot;,
                                &quot;description&quot;: &quot;MDIO_Write_Data.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MDIO_READ_DATA_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x50C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIO Read Data&quot;,
                            &quot;description&quot;: &quot;MDIO Read Data&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO_READ_DATA&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;MDIO_Read_Data&quot;,
                                &quot;description&quot;: &quot;MDIO_Read_Data.\n  Valid when MDIO ready is sampled High.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;MDIO_READY&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO Ready&quot;,
                                &quot;description&quot;: &quot;MDIO Ready.\n  This is a copy of Bit[7] of the MDIO Control Word.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;INTR_STATUS_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x600&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Status Register&quot;,
                            &quot;description&quot;: &quot;Indicates the status of an interrupt.&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO&quot;,
                                &quot;description&quot;: &quot;MDIO.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TX&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TX&quot;,
                                &quot;description&quot;: &quot;PTP_TX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_RX&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_RX&quot;,
                                &quot;description&quot;: &quot;PTP_RX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TIMER&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TIMER&quot;,
                                &quot;description&quot;: &quot;PTP_TIMER.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;INTR_PENDING_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x610&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Pending Register&quot;,
                            &quot;description&quot;: &quot;Indicates the pending status of an interrupt&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO&quot;,
                                &quot;description&quot;: &quot;MDIO.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TX&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TX&quot;,
                                &quot;description&quot;: &quot;PTP_TX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_RX&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_RX&quot;,
                                &quot;description&quot;: &quot;PTP_RX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TIMER&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TIMER&quot;,
                                &quot;description&quot;: &quot;PTP_TIMER.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;INTR_ENABLE_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x620&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Enable Register&quot;,
                            &quot;description&quot;: &quot;Indicates the enable state of an interrupt. Writing a 1 to any bit enables that particular interrupt.&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO&quot;,
                                &quot;description&quot;: &quot;MDIO.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TX&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TX&quot;,
                                &quot;description&quot;: &quot;PTP_TX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_RX&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_RX&quot;,
                                &quot;description&quot;: &quot;PTP_RX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TIMER&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TIMER&quot;,
                                &quot;description&quot;: &quot;PTP_TIMER.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;INTR_CLEAR_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x630&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Clear Register&quot;,
                            &quot;description&quot;: &quot;Writing a 1 to any bit of this register clears that particular interrupt.&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO&quot;,
                                &quot;description&quot;: &quot;MDIO.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TX&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TX&quot;,
                                &quot;description&quot;: &quot;PTP_TX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_RX&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_RX&quot;,
                                &quot;description&quot;: &quot;PTP_RX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TIMER&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TIMER&quot;,
                                &quot;description&quot;: &quot;PTP_TIMER.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;UNICAST_ADDRESS_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x700&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame filter unicast address[31:0]&quot;,
                            &quot;description&quot;: &quot;Frame filter unicast address[31:0]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;UNICAST_ADDRESS&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Frame filter unicast address[31:0]&quot;,
                                &quot;description&quot;: &quot;Frame filter unicast address[31:0].\n  This address is used by the MAC to match against the destination address of any incoming frames. The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;UNICAST_ADDRESS_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x704&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame filter unicast address[47:32]&quot;,
                            &quot;description&quot;: &quot;Frame filter unicast address[47:32]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;UNICAST_ADDRESS&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Frame filter unicast address[47:32]&quot;,
                                &quot;description&quot;: &quot;Frame filter unicast address[47:32].\n  See description for UNICAST_ADDRESS_WORD_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_CONTROL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x708&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Control&quot;,
                            &quot;description&quot;: &quot;Frame Filter Control&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x80000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_INDEX&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 4,
                                &quot;display_name&quot;: &quot;Filter Index&quot;,
                                &quot;description&quot;: &quot;Filter Index.\n  All frame filters are mapped to the same location with the filter index and AVB Select specifying which physical filter is to be accessed. When an AVB filter (bit[8] of the register) is being selected only indexes of 0-2 are allowed.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;AVB_SELECT&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;AVB Select&quot;,
                                &quot;description&quot;: &quot;AVB Select.\n  If the AVB Endpoint is present this is used to indicate that the filter to be selected is one of the three dedicated filters.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PROMISCUOUS_MODE&quot;: {
                                &quot;bit_offset&quot;: 31,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Promiscuous Mode&quot;,
                                &quot;description&quot;: &quot;Promiscuous Mode.\n  If this bit is set to 1, the frame filter is set to operate in promiscuous mode. All frames are passed to the receiver client regardless of the destination address.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_ENABLE_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x70C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Enable&quot;,
                            &quot;description&quot;: &quot;Frame Filter Enable&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000001&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Filter Enable&quot;,
                                &quot;description&quot;: &quot;Filter Enable.\n  This enable relates to the physical frame filter pointed to by the Filter index and take the value of AVB Select into account. If clear, the filter passes all packets.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_3_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x710&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFFFFFFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  All filter value registers have the same format. The lower 31 bits of filter value, at address 0x710, relating to the filter at physical Frame Filter index, that is to be written to the address table. The value is ordered so that the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Filter Value[47:0] as 0xFFEEDDCCBBAA.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_7_4_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x714&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0000FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_11_8_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x718&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_15_12_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x71C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_19_16_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x720&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_23_20_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x724&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_27_24_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x728&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_31_28_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x72C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_35_32_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x730&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_39_36_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x734&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_43_40_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x738&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_47_44_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x73C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_51_48_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x740&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_55_52_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x744&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_59_56_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x748&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_63_60_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x74C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x750&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFFFFFFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  All mask value registers have the same format.\n  If a mask bit is set to 1 then the corresponding bit of the Filter Value is compared by the frame filter. For example, if a basic Destination address comparison was desired then Bits[47:0] should be written to 1 and all other bits to 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_7_4_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x754&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0000FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_11_8_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x758&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_15_12_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x75C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_19_16_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x760&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_23_20_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x764&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_27_24_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x768&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_31_28_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x76C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_35_32_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x770&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_39_36_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x774&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_43_40_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x778&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_47_44_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x77C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_51_48_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x780&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_55_52_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x784&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_59_56_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x788&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_63_60_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x78C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_PTP_PKT_BUFFER_CTRL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12000&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX PTP Packet Buffer Control Register&quot;,
                            &quot;description&quot;: &quot;TX PTP Packet Buffer Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_SEND_FRAME_BITS&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;tx_send_frame Bits&quot;,
                                &quot;description&quot;: &quot;tx_send_frame Bits.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;write-only&quot;
                              },
                              &quot;TX_FRAME_WAITING_INDICATION&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;tx_frame_waiting Indication&quot;,
                                &quot;description&quot;: &quot;tx_frame_waiting Indication.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;TX_PACKET&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 3,
                                &quot;display_name&quot;: &quot;tx_packet&quot;,
                                &quot;description&quot;: &quot;tx_packet.\n  Indicates the number (block RAM bin position) of the most recently transmitted PTP packet.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_PTP_PKT_BUFFER_CTRL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12004&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX PTP Packet Buffer Control Register&quot;,
                            &quot;description&quot;: &quot;RX PTP Packet Buffer Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_CLEAR&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;rx_clear&quot;,
                                &quot;description&quot;: &quot;rx_clear.\n  When written with a 1, forces the buffer to empty, in practice moving the write address to the same value as the read address. If read, always returns 0.tx_send_frame Bitstx_send_frame Bits.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;write-only&quot;
                              },
                              &quot;RX_PACKET&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 4,
                                &quot;display_name&quot;: &quot;rx_packet&quot;,
                                &quot;description&quot;: &quot;rx_packet.\n  Indicates the number (block RAM bin position) of the most recently received PTP packet\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_ARBITER_SEND_SLOPE_CTL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x1200C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Arbiter Send Slope Control Register&quot;,
                            &quot;description&quot;: &quot;TX Arbiter Send Slope Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000800&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_SEND_SLOPE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 20,
                                &quot;display_name&quot;: &quot;Value of sendSlope&quot;,
                                &quot;description&quot;: &quot;Value of sendSlope.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_ARBITER_IDLE_SLOPE_CTL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12010&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Arbiter Idle Slope Control Register&quot;,
                            &quot;description&quot;: &quot;TX Arbiter Idle Slope Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00001800&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_SEND_SLOPE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 20,
                                &quot;display_name&quot;: &quot;Value of sendSlope&quot;,
                                &quot;description&quot;: &quot;Value of sendSlope.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RTC_NANOSEC_FIELD_OFFSET_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12800&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RTC Nanoseconds Field Offset&quot;,
                            &quot;description&quot;: &quot;RTC Nanoseconds Field Offset&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;OFFSET_NANOSEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 30,
                                &quot;display_name&quot;: &quot;30-bit offset value for the RTC nanoseconds&quot;,
                                &quot;description&quot;: &quot;30-bit offset value for the RTC nanoseconds.\n  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RTC_SEC_FIELD_OFFSET_BITS_31_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12808&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Seconds Field Offset Bits[31:0]&quot;,
                            &quot;description&quot;: &quot;Seconds Field Offset Bits[31:0]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;OFFSET_SEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;32-bit offset value for the RTC seconds field&quot;,
                                &quot;description&quot;: &quot;32-bit offset value for the RTC seconds field.\n  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RTC_SEC_FIELD_OFFSET_BITS_47_32_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x1280C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Seconds Field Offset Bits[47:32]&quot;,
                            &quot;description&quot;: &quot;Seconds Field Offset Bits[47:32]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;OFFSET_SEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;16-bit offset value for the RTC seconds field&quot;,
                                &quot;description&quot;: &quot;16-bit offset value for the RTC seconds field.\n  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RTC_INCREMENT_VAL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12810&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RTC Increment Value Control Register&quot;,
                            &quot;description&quot;: &quot;RTC Increment Value Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;NANOSEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 26,
                                &quot;display_name&quot;: &quot;RTC Increment Value Control Register&quot;,
                                &quot;description&quot;: &quot;RTC Increment Value Control Register.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;CURRENT_RTC_NANOSEC_FIELD_VAL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12814&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Current RTC Nanoseconds Value&quot;,
                            &quot;description&quot;: &quot;Current RTC Nanoseconds Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_RTC_NANOSEC_FIELD&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 30,
                                &quot;display_name&quot;: &quot;Current Value of the synchronized RTC nanoseconds field&quot;,
                                &quot;description&quot;: &quot;Current Value of the synchronized RTC nanoseconds field.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;CURRENT_RTC_SEC_FIELD_VAL_BITS_31_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12818&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Current RTC Seconds Field Value Bits [31:0]&quot;,
                            &quot;description&quot;: &quot;Current RTC Seconds Field Value Bits [31:0]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_RTC_SEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RTC Seconds field&quot;,
                                &quot;description&quot;: &quot;Sampled Value of the synchronized RTC Seconds field (Bits[31:0]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;CURRENT_RTC_SEC_FIELD_VAL_BITS_47_32_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x1281C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Current RTC Seconds Field Value Bits [47:32]&quot;,
                            &quot;description&quot;: &quot;Current RTC Seconds Field Value Bits [47:32]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_RTC_SEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;RTC Seconds field&quot;,
                                &quot;description&quot;: &quot;Sampled Value of the synchronized RTC Seconds field (Bits[47:32]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RTC_INTR_CLEAR_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12820&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RTC Interrupt Clear Register&quot;,
                            &quot;description&quot;: &quot;RTC Interrupt Clear Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;CLEAR&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RTC Interrupt Clear Register&quot;,
                                &quot;description&quot;: &quot;RTC Interrupt Clear Register.\n  Write ANY value to Bit[0] of this register to clear the interrupt_ptp_timer Interrupt signal. This bit always returns 0 on read.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;RTC_PHASE_ADJ_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12824&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RTC Interrupt Clear Register&quot;,
                            &quot;description&quot;: &quot;RTC Interrupt Clear Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_RTC_NANOSEC_FIELD&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 30,
                                &quot;display_name&quot;: &quot;RTC Phase Adjustment Register&quot;,
                                &quot;description&quot;: &quot;RTC Phase Adjustment Register.\n  ns value relating to the phase offset for all RTC derived timing signals (clk8k).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  &quot;s_axi&quot;: {
                    &quot;address_blocks&quot;: {
                      &quot;Reg0&quot;: {
                        &quot;base_address&quot;: &quot;0x00000&quot;,
                        &quot;range&quot;: &quot;0x00040000&quot;,
                        &quot;usage&quot;: &quot;register&quot;,
                        &quot;registers&quot;: {
                          &quot;RESET_AND_ADDRESS_FILTER_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Reset and Address Filter Register&quot;,
                            &quot;description&quot;: &quot;Reset and Address Filter Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;MCSTREJ&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Reject Receive Multicast Destination Address&quot;,
                                &quot;description&quot;: &quot;Reject Receive Multicast Destination Address.\n  0 – Accept receive multicast destination address Ethernet frames that meet address filtering specified in FMI register and/or the multicast address table.\n  1 – Reject all receive multicast destination address Ethernet frames regardless of FMI register and multicast address table.For each I/O bit programmed as input\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;BCSTREJ&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Reject Receive Broadcast Destination Address&quot;,
                                &quot;description&quot;: &quot;Reject Receive Broadcast Destination Address.\n  0 – Accept receive broadcast destination address Ethernet frames.\n  1 – Reject all receive broadcast destination address Ethernet frames. This is the only method available for blocking broadcast Ethernet frames.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXVTAGMODE&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Transmit VLAN Tag Mode&quot;,
                                &quot;description&quot;: &quot;Transmit VLAN Tag Mode.\n  00 – No VLAN tags are added to transmit frames.\n  01 – VLAN tags are added to all transmit frames.\n  10 – VLAN tags are added to all transmit frames that already have a VLAN tag.\n  11 – VLAN tags are added to select transmit frames that already have VLAN tags.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXVTAGMODE&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Receive VLAN Tag Mode&quot;,
                                &quot;description&quot;: &quot;Receive VLAN Tag Mode.\n  00 – No VLAN tags are added to receive frames.\n  01 – VLAN tags are added to all receive frames.\n  10 – VLAN tags are added to all receive frames that already have a VLAN tag.\n  11 – VLAN tags are added to select receive frames that already have VLAN tags.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXVSTRPMODE&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Transmit VLAN Strip Mode&quot;,
                                &quot;description&quot;: &quot;Transmit VLAN Strip Mode.\n  00 – No VLAN tags are stripped to transmit frames.\n  01 – One VLAN tag is stripped from all transmit frames that have VLAN tags.\n  10 – Reserved.\n  11 – One VLAN tag is stripped from select transmit frames that already have VLAN tags.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXVSTRPMODE&quot;: {
                                &quot;bit_offset&quot;: 9,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Receive VLAN Strip Mode&quot;,
                                &quot;description&quot;: &quot;Receive VLAN Strip Mode.\n  00 – No VLAN tags are stripped to receive frames.\n  01 – One VLAN tag is stripped from all receive frames that have VLAN tags.\n  10 – Reserved.\n  11 – One VLAN tag is stripped from select receive frames that already have VLAN tags.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;NEWFNCENBL&quot;: {
                                &quot;bit_offset&quot;: 11,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;New Functions Enable&quot;,
                                &quot;description&quot;: &quot;New Functions Enable.\n  0 – Disable new functions.\n  1 – Enable new functions if present.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;EMULTIFLTRENBL&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Enhanced Multicast Filter Enable&quot;,
                                &quot;description&quot;: &quot;Enhanced Multicast Filter Enable.\n  0 – Disable enhanced multicast address filtering mode.\n  1 – Enable enhanced multicast address filtering mode if present.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXBADFRMEN&quot;: {
                                &quot;bit_offset&quot;: 14,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Bad Frame Enable&quot;,
                                &quot;description&quot;: &quot;Receive Bad Frame Enable.\n  0 – Normal operation, bad frames are rejected.\n  1 – Bad frames are accepted.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TRANSMIT_PAUSE_FRAME_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmit Pause Frame Register&quot;,
                            &quot;description&quot;: &quot;Transmit Pause Frame Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TPFV&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Transmit Pause Frame Value&quot;,
                                &quot;description&quot;: &quot;Transmit Pause Frame Value.\n  These bits denote the value of the transmit pause frame pause time in units of 512 bit times. If enabled by the FCC register, writing a value into this register initiates the transmission of a single pause frame with the pause value defined in this field.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TRANSMIT_IFG_ADJUST_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmit Inter Frame Gap Adjustment Register&quot;,
                            &quot;description&quot;: &quot;Transmit Inter Frame Gap Adjustment Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;IFGP0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;Transmit Inter Frame Gap Adjustment Value&quot;,
                                &quot;description&quot;: &quot;Transmit Inter Frame Gap Adjustment Value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;INTERRUPT_STATUS_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0xC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Status Register&quot;,
                            &quot;description&quot;: &quot;Interrupt Status Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x40&quot;,
                            &quot;fields&quot;: {
                              &quot;HARDACSCMPLT&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Hard register Access Complete&quot;,
                                &quot;description&quot;: &quot;Hard register Access Complete.\n  0 – Hard register access is not complete.\n  1 – Hard register access is complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;AUTONEG&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Auto-Negotiation Complete&quot;,
                                &quot;description&quot;: &quot;Auto-Negotiation Complete.\n  0 – auto-negotiation not complete.\n  1 – auto-negotiation complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Complete&quot;,
                                &quot;description&quot;: &quot;Receive Complete.\n  0 – no frame received.\n  1 – frame received.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXRJECT&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Frame Rejected&quot;,
                                &quot;description&quot;: &quot;Receive Frame Rejected.\n  0 – no receive frame rejected.\n  1 – receive frame was rejected.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXMEMOVR&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Memory Overrun&quot;,
                                &quot;description&quot;: &quot;Receive Memory Overrun.\n  0 – normal operation, no overflow occurred.\n  1 – receive Memory overflow occurred and data was lost.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit Complete&quot;,
                                &quot;description&quot;: &quot;Transmit Complete.\n  0 – no frame transmitted.\n  1 – frame transmitted.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXDCMLOCK&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive DCM Lock&quot;,
                                &quot;description&quot;: &quot;Receive DCM Lock.\n  0 – RX digital clock manager (DCM) not locked.\n  1 – RX DCM Locked.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;MGTRDY&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Serial Transceiver Ready&quot;,
                                &quot;description&quot;: &quot;Serial Transceiver Ready.\n  0 – Serial transceiver / TEMAC not ready.\n  1 – Serial transceiver / TEMAC ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PHYRSTCMPLT&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PHY Reset Complete&quot;,
                                &quot;description&quot;: &quot;PHY Reset Complete.\n  0 – PHY not ready.\n  1 – PHY ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;INTERRUPT_PENDING_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x10&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Pending Register&quot;,
                            &quot;description&quot;: &quot;Interrupt Pending Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;HARDACSCMPLT&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Hard register Access Complete&quot;,
                                &quot;description&quot;: &quot;Hard register Access Complete.\n  0 – Hard register access is not complete.\n  1 – Hard register access is complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;AUTONEG&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Auto-Negotiation Complete&quot;,
                                &quot;description&quot;: &quot;Auto-Negotiation Complete.\n  0 – auto-negotiation not complete.\n  1 – auto-negotiation complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Complete&quot;,
                                &quot;description&quot;: &quot;Receive Complete.\n  0 – no frame received.\n  1 – frame received.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXRJECT&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Frame Rejected&quot;,
                                &quot;description&quot;: &quot;Receive Frame Rejected.\n  0 – no receive frame rejected.\n  1 – receive frame was rejected.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXMEMOVR&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Memory Overrun&quot;,
                                &quot;description&quot;: &quot;Receive Memory Overrun.\n  0 – normal operation, no overflow occurred.\n  1 – receive Memory overflow occurred and data was lost.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit Complete&quot;,
                                &quot;description&quot;: &quot;Transmit Complete.\n  0 – no frame transmitted.\n  1 – frame transmitted.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXDCMLOCK&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive DCM Lock&quot;,
                                &quot;description&quot;: &quot;Receive DCM Lock.\n  0 – RX digital clock manager (DCM) not locked.\n  1 – RX DCM Locked.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;MGTRDY&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MGT Ready&quot;,
                                &quot;description&quot;: &quot;MGT Ready.\n  0 – Serial transceiver / TEMAC not ready.\n  1 – Serial transceiver / TEMAC ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PHYRSTCMPLT&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PHY Reset Complete&quot;,
                                &quot;description&quot;: &quot;PHY Reset Complete.\n  0 – PHY not ready.\n  1 – PHY ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;INTERRUPT_ENABLE_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x14&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Enable Register&quot;,
                            &quot;description&quot;: &quot;Interrupt Enable Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;HARDACSCMPLT&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Hard register Access Complete&quot;,
                                &quot;description&quot;: &quot;Hard register Access Complete.\n  0 – Hard register access is not complete.\n  1 – Hard register access is complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;AUTONEG&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Auto-Negotiation Complete&quot;,
                                &quot;description&quot;: &quot;Auto-Negotiation Complete.\n  0 – auto-negotiation not complete.\n  1 – auto-negotiation complete.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Complete&quot;,
                                &quot;description&quot;: &quot;Receive Complete.\n  0 – no frame received.\n  1 – frame received.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXRJECT&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Frame Rejected&quot;,
                                &quot;description&quot;: &quot;Receive Frame Rejected.\n  0 – no receive frame rejected.\n  1 – receive frame was rejected.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXMEMOVR&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Memory Overrun&quot;,
                                &quot;description&quot;: &quot;Receive Memory Overrun.\n  0 – normal operation, no overflow occurred.\n  1 – receive Memory overflow occurred and data was lost.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TXCMPLT&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit Complete&quot;,
                                &quot;description&quot;: &quot;Transmit Complete.\n  0 – no frame transmitted.\n  1 – frame transmitted.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RXDCMLOCK&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive DCM Lock&quot;,
                                &quot;description&quot;: &quot;Receive DCM Lock.\n  0 – RX digital clock manager (DCM) not locked.\n  1 – RX DCM Locked.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;MGTRDY&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MGT Ready&quot;,
                                &quot;description&quot;: &quot;MGT Ready.\n  0 – Serial transceiver / TEMAC not ready.\n  1 – Serial transceiver / TEMAC ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PHYRSTCMPLT&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PHY Reset Complete&quot;,
                                &quot;description&quot;: &quot;PHY Reset Complete.\n  0 – PHY not ready.\n  1 – PHY ready.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TRANSMIT_VLAN_TAG_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x18&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmit VLAN Tag Register&quot;,
                            &quot;description&quot;: &quot;Transmit VLAN Tag Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;VID&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 12,
                                &quot;display_name&quot;: &quot;VLAN identifier&quot;,
                                &quot;description&quot;: &quot;VLAN identifier.\n  Uniquely identifies the VLAN to which the frame belongs.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;CFI&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Canonical Format Indicator&quot;,
                                &quot;description&quot;: &quot;Canonical Format Indicator.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PRIORITY&quot;: {
                                &quot;bit_offset&quot;: 13,
                                &quot;bit_width&quot;: 3,
                                &quot;display_name&quot;: &quot;User Priority&quot;,
                                &quot;description&quot;: &quot;User Priority.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TPID&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Tag Protocol Identifier&quot;,
                                &quot;description&quot;: &quot;Tag Protocol Identifier.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RECEIVE_VLAN_TAG_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x1C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Receive VLAN Tag Register&quot;,
                            &quot;description&quot;: &quot;Receive VLAN Tag Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;VID&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 12,
                                &quot;display_name&quot;: &quot;VLAN identifier&quot;,
                                &quot;description&quot;: &quot;VLAN identifier.\n  Uniquely identifies the VLAN to which the frame belongs.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;CFI&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Canonical Format Indicator&quot;,
                                &quot;description&quot;: &quot;Canonical Format Indicator.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PRIORITY&quot;: {
                                &quot;bit_offset&quot;: 13,
                                &quot;bit_width&quot;: 3,
                                &quot;display_name&quot;: &quot;User Priority&quot;,
                                &quot;description&quot;: &quot;User Priority.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TPID&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Tag Protocol Identifier&quot;,
                                &quot;description&quot;: &quot;Tag Protocol Identifier.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;UNICAST_ADDRESS_WORD_LOWER_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x20&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Unicast Address Word Lower Register&quot;,
                            &quot;description&quot;: &quot;Unicast Address Word Lower Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;UNICASTADDR&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Unicast Address&quot;,
                                &quot;description&quot;: &quot;Unicast Address.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;UNICAST_ADDRESS_WORD_UPPER_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x24&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Unicast Address Word Upper Register&quot;,
                            &quot;description&quot;: &quot;Unicast Address Word Upper Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;UNICASTADDR&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Unicast Address&quot;,
                                &quot;description&quot;: &quot;Unicast Address.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;VLAN_TPID_WORD0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x28&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;VLAN TPID Word 0 Register&quot;,
                            &quot;description&quot;: &quot;VLAN TPID Word 0 Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TPID0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TPID Value 0&quot;,
                                &quot;description&quot;: &quot;TPID Value 0.\n  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TPID1&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TPID Value 1&quot;,
                                &quot;description&quot;: &quot;TPID Value 1.\n  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;VLAN_TPID_WORD1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;VLAN TPID Word 1 Register&quot;,
                            &quot;description&quot;: &quot;VLAN TPID Word 1 Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TPID2&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TPID Value 2&quot;,
                                &quot;description&quot;: &quot;TPID Value 2.\n  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TPID3&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TPID Value 3&quot;,
                                &quot;description&quot;: &quot;TPID Value 3.\n  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PCS_PMA_TEMAC_STATUS_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x30&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;PCS PMA TEMAC Status Register&quot;,
                            &quot;description&quot;: &quot;PCS PMA TEMAC Status Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;LINKSTATUS&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Link Status&quot;,
                                &quot;description&quot;: &quot;Link Status.\n  0 – No Link.\n  1 – Link is up.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;LINKSYNC&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Link Synchronization&quot;,
                                &quot;description&quot;: &quot;Link Synchronization.\n  0 – Synchronization failed.\n  1 – Synchronization obtained.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RUDI_C&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RUDI(/C/)&quot;,
                                &quot;description&quot;: &quot;RUDI(/C/).\n  0 – /C/ ordered sets(AN Configuration sequences) not there.\n  1 – Receiving /C/ ordered sets.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RUDI_I&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RUDI(/I/)&quot;,
                                &quot;description&quot;: &quot;RUDI(/I/).\n  0 – /I/ ordered sets(Idles) not there.\n  1 – Receiving /I/ ordered sets.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RUDI_INVLD&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RUDI(/INVALID/)&quot;,
                                &quot;description&quot;: &quot;RUDI(/INVALID/).\n  0 – No invalid data.\n  1 – Receiving invalid data while receiving/C/ or/I/ ordered set.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RXDISPERR&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Disparity Error&quot;,
                                &quot;description&quot;: &quot;Receive Disparity Error.\n  0 – No running disparity error.\n  1 – Receiving running disparity error during the 8B/10B decoding function.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RXNOTINTABLE&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receive Not In Table&quot;,
                                &quot;description&quot;: &quot;Receive Not In Table.\n  0 – No receive not in table error.\n  1 – Receiving code group which is not recognized from the 8B/10B coding tables.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PHYLINKSTATUS&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PHY Link Status (SGMII only)&quot;,
                                &quot;description&quot;: &quot;PHY Link Status (SGMII only).   0 – Indicates that it has not linked with its link partner.   1 – Indicates that the PHY has obtained a link with its link partner. When operating in 1000BASE-X mode this bit remains Low and should be ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RMTFLTENC&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Remote Fault Encoding (1000BASE-X only)&quot;,
                                &quot;description&quot;: &quot;Remote Fault Encoding (1000BASE-X only).   00 – No error, link OK.   01 - Offline.   10 - Link failure.   11 - Auto-Negotiation error. This signal has no significance when the core is in SGMII mode with PHY side implementation and indicates 00.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;SPEED&quot;: {
                                &quot;bit_offset&quot;: 10,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;Speed&quot;,
                                &quot;description&quot;: &quot;This signal indicates the speed negotiated and is only valid when Auto-Negotiation is enabled. The signal encoding is:   11 - Reserved.   10 - 1000 Mb/s.   01 - 100 Mb/s.   00 – 10 Mb/s.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;DUPLEX&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Duplex Mode&quot;,
                                &quot;description&quot;: &quot;This bit indicates the Duplex mode negotiated with the link partner.\n  1 - Full-Duplex.\n  0 - Half-Duplex.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;RMTFLT&quot;: {
                                &quot;bit_offset&quot;: 13,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Remote Fault (1000BASE-X only)&quot;,
                                &quot;description&quot;: &quot;Remote Fault (1000BASE-X only)\n  1 - Remote fault is detected.\n  0 - No remote fault.\nThis signal has no significance in SGMII PHY mode.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RECEIVED_BYTES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x200&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Received Bytes Counter Word 0&quot;,
                            &quot;description&quot;: &quot;Received Bytes Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RECEIVED_BYTES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Received Bytes Counter Word 0&quot;,
                                &quot;description&quot;: &quot;Received Bytes Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RECEIVED_BYTES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x204&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Received Bytes Counter Word 1&quot;,
                            &quot;description&quot;: &quot;Received Bytes Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RECEIVED_BYTES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Received Bytes Counter Word 1&quot;,
                                &quot;description&quot;: &quot;Received Bytes Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TRANSMITTED_BYTES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x208&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmitted Bytes Counter Word 0&quot;,
                            &quot;description&quot;: &quot;Transmitted Bytes Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TRANSMITTED_BYTES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Transmitted Bytes Counter Word 0&quot;,
                                &quot;description&quot;: &quot;Transmitted Bytes Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TRANSMITTED_BYTES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x20C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmitted Bytes Counter Word 1&quot;,
                            &quot;description&quot;: &quot;Transmitted Bytes Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TRANSMITTED_BYTES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Transmitted Bytes Counter Word 1&quot;,
                                &quot;description&quot;: &quot;Transmitted Bytes Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;UNDERSIZE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x210&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Undersize Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;Undersize Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;UNDERSIZE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Undersize Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;Undersize Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;UNDERSIZE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x214&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Undersize Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;Undersize Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;UNDERSIZE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Undersize Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;Undersize Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;FRAGMENT_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x218&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Fragment Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;Fragment Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;FRAGMENT_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Fragment Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;Fragment Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;FRAGMENT_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x21C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Fragment Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;Fragment Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;FRAGMENT_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Fragment Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;Fragment Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_64BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x220&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 64-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 64-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_64BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 64-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 64-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_64BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x224&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 64-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 64-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_64BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 64-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 64-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x228&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 65-127-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 65-127-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_65_127_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 65-127-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 65-127-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x22C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 65-127-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 65-127-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_65_127_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 65-127-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 65-127-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x230&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 128-255-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 128-255-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_128_255_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 128-255-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 128-255-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x234&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 128-255-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 128-255-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_128_255_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 128-255-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 128-255-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x238&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 256-511-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 256-511-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_256_511_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 256-511-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 256-511-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x23C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 256-511-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 256-511-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_256_511_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 256-511-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 256-511-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x240&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 512-1023-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 512-1023-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 512-1023-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 512-1023-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x244&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 512-1023-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 512-1023-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 512-1023-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 512-1023-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x248&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x24C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX 1024-Max Frames Size Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x250&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Oversize Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Oversize Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_OVERSIZE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Oversize Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Oversize Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x254&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Oversize Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Oversize Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_OVERSIZE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Oversize Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Oversize Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_64BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x258&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 64-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 64-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_64BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 64-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 64-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_64BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x25C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 64-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 64-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_64BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 64-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 64-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x260&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 65-127-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 65-127-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_65_127_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 65-127-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 65-127-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x264&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 65-127-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 65-127-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_65_127_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 65-127-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 65-127-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x268&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 128-255-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 128-255-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_128_255_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 128-255-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 128-255-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x26C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 128-255-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 128-255-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_128_255_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 128-255-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 128-255-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x270&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 256-511-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 256-511-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_256_511_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 256-511-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 256-511-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x274&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 256-511-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 256-511-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_256_511_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 256-511-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 256-511-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x278&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 512-1023-Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 512-1023-Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 512-1023-Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 512-1023-Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x27C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 512-1023-Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 512-1023-Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 512-1023-Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 512-1023-Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x280&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x284&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX 1024-Max Frames Size Byte Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x288&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Oversize Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Oversize Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_OVERSIZE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Oversize Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Oversize Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x28C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Oversize Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Oversize Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_OVERSIZE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Oversize Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Oversize Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x290&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x294&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x298&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Frame Check Sequence Errors Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Frame Check Sequence Errors Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Frame Check Sequence Errors Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Frame Check Sequence Errors Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x29C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Frame Check Sequence Errors Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Frame Check Sequence Errors Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Frame Check Sequence Errors Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Frame Check Sequence Errors Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2A0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Broadcast Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Broadcast Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Broadcast Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Broadcast Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2A4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Broadcast Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Broadcast Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Broadcast Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Broadcast Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2A8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Multicast Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Multicast Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Multicast Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Multicast Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2AC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Multicast Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Multicast Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Multicast Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Multicast Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2B0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Control Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Control Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Control Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Control Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2B4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Control Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Control Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Control Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Control Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2B8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2BC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Length/Type Out of Range Errors Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2C0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2C4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good VLAN Tagged Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2C8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Pause Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Good Pause Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Pause Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Good Pause Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2CC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Good Pause Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Good Pause Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Good Pause Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Good Pause Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2D0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Bad Opcode Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Bad Opcode Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Bad Opcode Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Bad Opcode Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2D4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Bad Opcode Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Bad Opcode Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Bad Opcode Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Bad Opcode Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2D8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2DC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2E0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Broadcast Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Broadcast Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Broadcast Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Broadcast Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2E4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Broadcast Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Broadcast Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Broadcast Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Broadcast Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2E8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Multicast Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Multicast Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Multicast Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Multicast Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2EC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Multicast Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Multicast Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Multicast Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Multicast Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_UNDERRUN_ERRORS_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2F0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Underrun Errors Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Underrun Errors Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_UNDERRUN_ERRORS_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Underrun Errors Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Underrun Errors Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_UNDERRUN_ERRORS_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2F4&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Underrun Errors Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Underrun Errors Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_UNDERRUN_ERRORS_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Underrun Errors Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Underrun Errors Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2F8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Control Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Control Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Control Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Control Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x2FC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Control Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Control Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Control Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Control Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x300&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good VLAN Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good VLAN Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good VLAN Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good VLAN Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x304&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good VLAN Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good VLAN Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good VLAN Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good VLAN Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x308&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Pause Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Good Pause Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Pause Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Good Pause Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x30C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Good Pause Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Good Pause Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Good Pause Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Good Pause Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x310&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Single Collision Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Single Collision Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Single Collision Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Single Collision Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x314&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Single Collision Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Single Collision Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Single Collision Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Single Collision Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x318&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Multiple Collision Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Multiple Collision Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Multiple Collision Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Multiple Collision Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x31C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Multiple Collision Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Multiple Collision Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Multiple Collision Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Multiple Collision Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_DEFERRED_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x320&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Deferred Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Deferred Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_DEFERRED_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Deferred Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Deferred Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_DEFERRED_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x324&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Deferred Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Deferred Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_DEFERRED_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Deferred Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Deferred Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_LATE_COLL_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x328&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Late Collision Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Late Collision Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_LATE_COLL_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Late Collision Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Late Collision Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_LATE_COLL_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x32C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Late Collision Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Late Collision Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_LATE_COLL_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Late Collision Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Late Collision Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_EXCESS_COLL_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x330&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Excess Collision Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Excess Collision Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_EXCESS_COLL_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Excess Collision Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Excess Collision Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_EXCESS_COLL_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x334&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Excess Collision Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Excess Collision Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_EXCESS_COLL_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Excess Collision Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Excess Collision Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_EXCESS_DEF_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x338&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Excess Deferral Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX Excess Deferral Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_EXCESS_DEF_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Excess Deferral Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX Excess Deferral Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_EXCESS_DEF_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x33C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Excess Deferral Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX Excess Deferral Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_EXCESS_DEF_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX Excess Deferral Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX Excess Deferral Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_ALIGNMENT_ERR_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x340&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Alignment Errors Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX Alignment Errors Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_ALIGNMENT_ERR_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Alignment Errors Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX Alignment Errors Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_ALIGNMENT_ERR_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x344&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Alignment Errors Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX Alignment Errors Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_ALIGNMENT_ERR_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX Alignment Errors Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX Alignment Errors Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_PFC_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x348&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX PFC Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;TX PFC Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_PFC_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX PFC Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;TX PFC Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_PFC_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x34C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX PFC Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;TX PFC Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_PFC_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;TX PFC Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;TX PFC Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_PFC_FRAMES_COUNTER_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x350&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX PFC Frames Counter Word 0&quot;,
                            &quot;description&quot;: &quot;RX PFC Frames Counter Word 0&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_PFC_FRAMES_COUNTER_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX PFC Frames Counter Word 0&quot;,
                                &quot;description&quot;: &quot;RX PFC Frames Counter Word 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_PFC_FRAMES_COUNTER_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x354&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX PFC Frames Counter Word 1&quot;,
                            &quot;description&quot;: &quot;RX PFC Frames Counter Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_PFC_FRAMES_COUNTER_WORD_1&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RX PFC Frames Counter Word 1&quot;,
                                &quot;description&quot;: &quot;RX PFC Frames Counter Word 1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_CONF_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x400&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Pause frame MAC Source Address[31:0]&quot;,
                            &quot;description&quot;: &quot;Pause frame MAC Source Address[31:0]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFFFFFFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_CONF_WORD_0&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Pause frame MAC Source Address[31:0]&quot;,
                                &quot;description&quot;: &quot;Pause frame MAC Source Address[31:0].\n  The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RX_CONF_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x404&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Receiver Configuration Word 1&quot;,
                            &quot;description&quot;: &quot;Receiver Configuration Word 1&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x1000FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PAUSE_FRM_MAC_SA&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause frame MAC Source Address[47:32]&quot;,
                                &quot;description&quot;: &quot;Pause frame MAC Source Address[47:32].\n  Refer the RX_CONF_WORD_0 register description.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;CTL_FRM_LEN_CHK_DISABLE&quot;: {
                                &quot;bit_offset&quot;: 24,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Control Frame Length Check Disable&quot;,
                                &quot;description&quot;: &quot;Control Frame Length Check Disable.\n  When this bit is set to 1, the core does not mark control frames as bad if they are greater than the minimum frame length.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;LT_ERR_CHK_DISABLE&quot;: {
                                &quot;bit_offset&quot;: 25,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Length/Type Error Check Disable&quot;,
                                &quot;description&quot;: &quot;Length/Type Error Check Disable.\n  1 - Core does not perform the length/type field error checks.\n  0 - Core performs the length/type field error checks. Normal operation.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;HALF_DUPLEX&quot;: {
                                &quot;bit_offset&quot;: 26,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Half Duplex&quot;,
                                &quot;description&quot;: &quot;Half Duplex.\n  1 - Half Duplex.\n  0 - Full Duplex.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;VLAN_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 27,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;VLAN Enable&quot;,
                                &quot;description&quot;: &quot;VLAN Enable.\n  When this bit is set to 1, VLAN tagged frames are accepted by the receiver.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 28,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Receiver Enable&quot;,
                                &quot;description&quot;: &quot;Receiver Enable.\n  If set to 1, the receiver block is operational. If set to 0, the block ignores activity on the physical interface RX port.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;INBAND_FCS_ENBALE&quot;: {
                                &quot;bit_offset&quot;: 29,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;In-band FCS Enable&quot;,
                                &quot;description&quot;: &quot;In-band FCS Enable.\n  1 - MAC receiver passes the FCS field up to the client.\n  0 - Client is not passed to the FCS.\nIn both cases, the FCS is verified on the frame.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;JUMBO_FRAME_ENBALE&quot;: {
                                &quot;bit_offset&quot;: 30,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Jumbo Frame Enable&quot;,
                                &quot;description&quot;: &quot;Jumbo Frame Enable.\n  1 - MAC receiver accepts frames over the specified IEEE 802.3-2008 maximum legal length.\n  0 - MAC only accepts frames up to the specified maximum.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RESET&quot;: {
                                &quot;bit_offset&quot;: 31,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Reset&quot;,
                                &quot;description&quot;: &quot;Reset.\n  When this bit is set to 1, the receiver is reset. The bit then automatically reverts to 0. This reset also sets all of the receiver configuration registers to their default values.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_CONF_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x408&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmitter Configuration Word&quot;,
                            &quot;description&quot;: &quot;Transmitter Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x10000000&quot;,
                            &quot;fields&quot;: {
                              &quot;IFG_ADJUST_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 25,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Interframe Gap Adjust Enable&quot;,
                                &quot;description&quot;: &quot;Interframe Gap Adjust Enable.\n  If 1, the transmitter reads the value on the port tx_ifg_delay at the start of frame transmission and adjusts the interframe gap following the frame accordingly. If 0, the transmitter outputs a minimum interframe gap of at least twelve clock cycles, as specified in IEEE 802.3-2008.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;HALF_DUPLEX&quot;: {
                                &quot;bit_offset&quot;: 26,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Half Duplex&quot;,
                                &quot;description&quot;: &quot;Half Duplex.\n  1 - Half Duplex.\n  0 - Full Duplex.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;VLAN_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 27,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;VLAN Enable&quot;,
                                &quot;description&quot;: &quot;VLAN Enable.\n  When this bit is set to 1, the transmitter recognizes the transmission of VLAN tagged frames.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 28,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmit Enable&quot;,
                                &quot;description&quot;: &quot;Transmit Enable.\n  1 - Transmitter is operational.\n  0 - Transmitter is disabled.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;INBAND_FCS_ENBALE&quot;: {
                                &quot;bit_offset&quot;: 29,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;In-band FCS Enable&quot;,
                                &quot;description&quot;: &quot;In-band FCS Enable.\n  1 - MAC transmitter expects the FCS field to be passed in by the client.\n  0 - MAC transmitter appends padding as required, computes the FCS and appends it to the frame.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;JUMBO_FRAME_ENBALE&quot;: {
                                &quot;bit_offset&quot;: 30,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Jumbo Frame Enable&quot;,
                                &quot;description&quot;: &quot;Jumbo Frame Enable.\n  1 - MAC transmitter sends frames that are greater than the specified IEEE 802.3-2008 maximum legal length.\n  0 - MAC only sends frames up to the specified maximum.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RESET&quot;: {
                                &quot;bit_offset&quot;: 31,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Reset&quot;,
                                &quot;description&quot;: &quot;Reset.\n  When this bit is set to 1, the transmitter is reset. The bit then automatically reverts to 0. This reset also sets all of the transmitter configuration registers to their default values.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FLOW_CONTROL_CONF_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x40C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Flow Control Configuration Word&quot;,
                            &quot;description&quot;: &quot;Flow Control Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x6010FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_P0_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 0 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 0 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 0 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p0_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P1_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 1 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 1 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 1 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p1_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P2_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 2 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 2 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 2 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p2_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P3_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 3 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 3 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 3 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p3_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P4_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 4,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 4 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 4 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 4 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p4_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P5_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 5,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 5 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 5 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 5 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p5_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P6_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 6 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 6 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 6 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p6_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_P7_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Priority 7 pause enable&quot;,
                                &quot;description&quot;: &quot;RX Priority 7 pause enable.\n  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 7 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p7_tvalid remains at 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P0_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 0 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 0 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p0_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P1_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 9,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 1 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 1 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p1_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P2_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 10,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 2 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 2 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p2_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P3_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 11,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 3 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 3 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p3_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P4_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 12,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 4 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 4 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p4_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P5_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 13,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 5 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 5 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p5_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P6_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 14,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 6 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 6 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p6_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_P7_PAUSE_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 15,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Priority 7 pause enable&quot;,
                                &quot;description&quot;: &quot;TX Priority 7 pause enable.\n  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p7_tvalid is ignored.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_AUTO_XON&quot;: {
                                &quot;bit_offset&quot;: 20,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Auto XON&quot;,
                                &quot;description&quot;: &quot;TX Auto XON.\n  Only present when the core has been generated with PFC support – this bit defaults to 0 if PFC is not supported. Send a flow control or PFC frame with the relevant quanta set to zero (XON frame) when the relevant, enabled pause request is dropped.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PFC_ENABLE_RX&quot;: {
                                &quot;bit_offset&quot;: 25,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Priority pause flow control enable (RX)&quot;,
                                &quot;description&quot;: &quot;Priority pause flow control enable (RX).\n  Only present when the core has been generated with PFC support. When this bit is 1, received PFC frames assert the relevant, enabled RX PFC tvalid outputs as described in Receiving a PFC Frame. When this bit is 0, received PFC frames are ignored and passed to the client. This mode should not be enabled at the same time as Flow Control (RX) (Bit[29]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PFC_ENABLE_TX&quot;: {
                                &quot;bit_offset&quot;: 26,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Priority pause flow control enable (TX)&quot;,
                                &quot;description&quot;: &quot;Priority pause flow control enable (TX).\n  Only present when the core has been generated with PFC support. When this bit is 1, asserting an enabled TX PFC tvalid signal results in a PFC frame being sent from the transmitter. When this bit is 0,the TX PFC tvalid inputs are ignored. This mode should not be enabled at the same time as Flow Control (TX) (Bit[30]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;FLOW_CONTROL_ENABLE_RX&quot;: {
                                &quot;bit_offset&quot;: 29,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Flow Control Enable (RX)&quot;,
                                &quot;description&quot;: &quot;Flow Control Enable (RX).\n  When this bit is 1, received flow control frames inhibit the transmitter operation as described in Receiving a Pause Frame. When this bit is 0, received flow control frames are always passed up to the client. This mode should not be enabled at the same time as PFC (Bit[25]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;FLOW_CONTROL_ENABLE_TX&quot;: {
                                &quot;bit_offset&quot;: 30,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Flow Control Enable (TX)&quot;,
                                &quot;description&quot;: &quot;Flow Control Enable (TX).\n  When this bit is 1, asserting the pause_req signal sends a flow control frame out from the transmitter as described in Transmitting a Pause Control Frame. When this bit is 0, asserting the pause_req signal has no effect. This mode should not be enabled at the same time as PFC (Bit[26]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MAC_SPEED_CONF_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x410&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MAC Speed Configuration Word&quot;,
                            &quot;description&quot;: &quot;MAC Speed Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x80000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MAC_SPEED_CONF&quot;: {
                                &quot;bit_offset&quot;: 30,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;MAC Speed Configuration&quot;,
                                &quot;description&quot;: &quot;MAC Speed Configuration.\n  00 - 10 Mb/s\n  01 - 100 Mb/s\n  10 - 1 Gb/s\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RX_MAC_FRAME_CONF_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x414&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX Max Frame Configuration Word&quot;,
                            &quot;description&quot;: &quot;RX Max Frame Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x000007D0&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_MAX_FRAME_LENGTH&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 15,
                                &quot;display_name&quot;: &quot;RX Max Frame Length&quot;,
                                &quot;description&quot;: &quot;RX Max Frame Length.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;RX_MAX_FRAME_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RX Max Frame Enable&quot;,
                                &quot;description&quot;: &quot;RX Max Frame Enable.\n  When Low, the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High, the MAC allows frames up to RX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_MAC_FRAME_CONF_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x418&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Max Frame Configuration Word&quot;,
                            &quot;description&quot;: &quot;TX Max Frame Configuration Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x000007D0&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_MAX_FRAME_LENGTH&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 15,
                                &quot;display_name&quot;: &quot;TX Max Frame Length&quot;,
                                &quot;description&quot;: &quot;TX Max Frame Length.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_MAX_FRAME_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;TX Max Frame Enable&quot;,
                                &quot;description&quot;: &quot;TX Max Frame Enable.\n  When Low the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High the MAC allows frames up to TX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_TIMESTAMP_ADJUST_CONTROL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x41C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Transmitter Timestamp Adjust Control Register&quot;,
                            &quot;description&quot;: &quot;Transmitter Timestamp Adjust Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x000000D3&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_LATENCY_ADJUST&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;TX latency adjust value&quot;,
                                &quot;description&quot;: &quot;TX latency adjust value.\n  In ToD mode: This value is in units of nanoseconds and is initialized to reflect the delay following the timestamping position through the MAC, 1000BASE-X FPGA logic, and GTX transceiver components.\n  In Correction Field Format: The default value is 387ns decimal value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_TS_CORRECTION_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Transmitter Timestamp Correction Enable&quot;,
                                &quot;description&quot;: &quot;Transmitter Timestamp Correction Enable.\n  0 - Transmitter timestamp is not adjusted.\n  1 - Transmitter timestamp is adjusted by the “TX latency adjust value”.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_0_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x480&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 0 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 0 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 0 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 0 value.\n  This register is only present when PFC is enabled at core customization time. When enabled, this register sets the quanta value to be inserted in the PFC frame for this priority.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 0 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 0 refresh value.\n  This register is only present when PFC is enabled at the core customization time. When enabled, this register controls how frequently a PF quanta is refreshed by the transmission of a new PFC frame. When a refresh occurs, all currently active (TX PFC tvalid is High and enabled) priorities are refreshed.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_1_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x484&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 1 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 1 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 1 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 1 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 1 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 1 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_2_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x488&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 2 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 2 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 2 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 2 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 2 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 2 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_3_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x48C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 3 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 3 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 3 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 3 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 3 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 3 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_4_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x490&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 4 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 4 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 4 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 4 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 4 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 4 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_5_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x494&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 5 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 5 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 5 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 5 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 5 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 5 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_6_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x498&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 6 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 6 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 6 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta value 6.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 6 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 6 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;PRIORITY_7_QUANTA_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x49C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Priority 7 Quanta/Refresh Register&quot;,
                            &quot;description&quot;: &quot;Priority 7 Quanta/Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF00FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;PER_QUANTA_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 7 value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 7 value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PER_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta 7 refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta 7 refresh value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;LEGACY_PAUSE_REFRESH_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x4A0&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Legacy Pause Refresh Register&quot;,
                            &quot;description&quot;: &quot;Legacy Pause Refresh Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFF000000&quot;,
                            &quot;fields&quot;: {
                              &quot;PAUSE_QUANTA_REFRESH_VALUE&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Pause Quanta refresh value&quot;,
                                &quot;description&quot;: &quot;Pause Quanta refresh value.\n  This register is only present when PFC is enabled at the core customization time. When PFC is supported, the 802.3 pause request can also support XON/XOFF Extended Functionality. This controls the frequency of the automatic pause refresh.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;ID_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x4F8&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;ID Register&quot;,
                            &quot;description&quot;: &quot;ID Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;PATCH_LEVEL&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;Patch Level&quot;,
                                &quot;description&quot;: &quot;Patch Level.\n  0 - No patch.\n  1 - Rev1.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;MINOR_REV&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;Minor Rev&quot;,
                                &quot;description&quot;: &quot;Minor Rev.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;MAJOR_REV&quot;: {
                                &quot;bit_offset&quot;: 24,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;Major Rev&quot;,
                                &quot;description&quot;: &quot;Minor Rev.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;ABILITY_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x4FC&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Ability Register&quot;,
                            &quot;description&quot;: &quot;Ability Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x0000070F&quot;,
                            &quot;fields&quot;: {
                              &quot;TEN_M_ABILITY&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;10M_Ability&quot;,
                                &quot;description&quot;: &quot;10M_Ability.\n  If set, the core is 10M capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;HUNDRED_M_ABILITY&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;100M_Ability&quot;,
                                &quot;description&quot;: &quot;100M_Ability.\n  If set, the core is 100M capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;ONE_G_ABILITY&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;1G_Ability&quot;,
                                &quot;description&quot;: &quot;1G_Ability.\n  If set, the core is 1G capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;TWO_P_FIVE_G_ABILITY&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;2_5G_Ability&quot;,
                                &quot;description&quot;: &quot;2_5G_Ability.\n  If set, the core is 2.5G capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;STATISTICS_COUNTERS_AVAILABLE&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Statistics Counters available&quot;,
                                &quot;description&quot;: &quot;Statistics Counters available.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;HALF_DUPLEX_CAPABLE&quot;: {
                                &quot;bit_offset&quot;: 9,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Half duplex capable&quot;,
                                &quot;description&quot;: &quot;Half duplex capable.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;FRAME_FILTER_AVAILABLE&quot;: {
                                &quot;bit_offset&quot;: 10,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Frame filter available&quot;,
                                &quot;description&quot;: &quot;Frame filter available.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PFC_SUPPORT&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PFC Support&quot;,
                                &quot;description&quot;: &quot;PFC Support.\n  This bit indicates that the core has been generated with PFC support.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;MDIO_SETUP_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x500&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIO Setup Word&quot;,
                            &quot;description&quot;: &quot;MDIO Setup Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0000070F&quot;,
                            &quot;fields&quot;: {
                              &quot;CLOCK_DIVIDE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 6,
                                &quot;display_name&quot;: &quot;Clock Divide&quot;,
                                &quot;description&quot;: &quot;Clock Divide.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;MDIO_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 6,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO Enable&quot;,
                                &quot;description&quot;: &quot;MDIO Enable.   1 - MDIO interface can be used to access attached PHY devices.    0 - MDIO interface is disabled and the MDIO signals remain inactive.  A write to this bit only takes effect if Clock Divide is set to a nonzero value.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MDIO_CONTROL_WORD_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x504&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIO Control Word&quot;,
                            &quot;description&quot;: &quot;MDIO Control Word&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO_READY&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO ready&quot;,
                                &quot;description&quot;: &quot;MDIO ready.\n  When set the MDIO is enabled and ready for a new transfer.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;INITIATE&quot;: {
                                &quot;bit_offset&quot;: 11,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Initiate&quot;,
                                &quot;description&quot;: &quot;Initiate.\n  Writing a 1 to this bit starts an MDIO transfer.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;write-only&quot;
                              },
                              &quot;TX_OP&quot;: {
                                &quot;bit_offset&quot;: 14,
                                &quot;bit_width&quot;: 2,
                                &quot;display_name&quot;: &quot;TX_OP&quot;,
                                &quot;description&quot;: &quot;TX_OP.\n  01 - Write Access.\n  10 - Read Access.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_REGAD&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 5,
                                &quot;display_name&quot;: &quot;TX_REGAD&quot;,
                                &quot;description&quot;: &quot;TX_REGAD.\n  This controls the register address being accessed.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;TX_PHYAD&quot;: {
                                &quot;bit_offset&quot;: 24,
                                &quot;bit_width&quot;: 5,
                                &quot;display_name&quot;: &quot;TX_PHYAD&quot;,
                                &quot;description&quot;: &quot;TX_PHYAD.\n  This controls the PHY address being accessed.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MDIO_WRITE_DATA_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x508&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIO Write Data&quot;,
                            &quot;description&quot;: &quot;MDIO Write Data&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO_WRITE_DATA&quot;: {
                                &quot;bit_offset&quot;: 7,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO_Write_Data&quot;,
                                &quot;description&quot;: &quot;MDIO_Write_Data.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;MDIO_READ_DATA_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x50C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;MDIO Read Data&quot;,
                            &quot;description&quot;: &quot;MDIO Read Data&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO_READ_DATA&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;MDIO_Read_Data&quot;,
                                &quot;description&quot;: &quot;MDIO_Read_Data.\n  Valid when MDIO ready is sampled High.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;MDIO_READY&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO Ready&quot;,
                                &quot;description&quot;: &quot;MDIO Ready.\n  This is a copy of Bit[7] of the MDIO Control Word.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;INTR_STATUS_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x600&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Status Register&quot;,
                            &quot;description&quot;: &quot;Indicates the status of an interrupt.&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO&quot;,
                                &quot;description&quot;: &quot;MDIO.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TX&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TX&quot;,
                                &quot;description&quot;: &quot;PTP_TX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_RX&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_RX&quot;,
                                &quot;description&quot;: &quot;PTP_RX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TIMER&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TIMER&quot;,
                                &quot;description&quot;: &quot;PTP_TIMER.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;INTR_PENDING_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x610&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Pending Register&quot;,
                            &quot;description&quot;: &quot;Indicates the pending status of an interrupt&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO&quot;,
                                &quot;description&quot;: &quot;MDIO.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TX&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TX&quot;,
                                &quot;description&quot;: &quot;PTP_TX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_RX&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_RX&quot;,
                                &quot;description&quot;: &quot;PTP_RX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TIMER&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TIMER&quot;,
                                &quot;description&quot;: &quot;PTP_TIMER.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;INTR_ENABLE_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x620&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Enable Register&quot;,
                            &quot;description&quot;: &quot;Indicates the enable state of an interrupt. Writing a 1 to any bit enables that particular interrupt.&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO&quot;,
                                &quot;description&quot;: &quot;MDIO.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TX&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TX&quot;,
                                &quot;description&quot;: &quot;PTP_TX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_RX&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_RX&quot;,
                                &quot;description&quot;: &quot;PTP_RX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TIMER&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TIMER&quot;,
                                &quot;description&quot;: &quot;PTP_TIMER.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;INTR_CLEAR_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x630&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Interrupt Clear Register&quot;,
                            &quot;description&quot;: &quot;Writing a 1 to any bit of this register clears that particular interrupt.&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;MDIO&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;MDIO&quot;,
                                &quot;description&quot;: &quot;MDIO.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TX&quot;: {
                                &quot;bit_offset&quot;: 1,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TX&quot;,
                                &quot;description&quot;: &quot;PTP_TX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_RX&quot;: {
                                &quot;bit_offset&quot;: 2,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_RX&quot;,
                                &quot;description&quot;: &quot;PTP_RX.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;PTP_TIMER&quot;: {
                                &quot;bit_offset&quot;: 3,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;PTP_TIMER&quot;,
                                &quot;description&quot;: &quot;PTP_TIMER.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;UNICAST_ADDRESS_WORD_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x700&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame filter unicast address[31:0]&quot;,
                            &quot;description&quot;: &quot;Frame filter unicast address[31:0]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;UNICAST_ADDRESS&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Frame filter unicast address[31:0]&quot;,
                                &quot;description&quot;: &quot;Frame filter unicast address[31:0].\n  This address is used by the MAC to match against the destination address of any incoming frames. The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;UNICAST_ADDRESS_WORD_1_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x704&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame filter unicast address[47:32]&quot;,
                            &quot;description&quot;: &quot;Frame filter unicast address[47:32]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;UNICAST_ADDRESS&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;Frame filter unicast address[47:32]&quot;,
                                &quot;description&quot;: &quot;Frame filter unicast address[47:32].\n  See description for UNICAST_ADDRESS_WORD_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_CONTROL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x708&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Control&quot;,
                            &quot;description&quot;: &quot;Frame Filter Control&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x80000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_INDEX&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 4,
                                &quot;display_name&quot;: &quot;Filter Index&quot;,
                                &quot;description&quot;: &quot;Filter Index.\n  All frame filters are mapped to the same location with the filter index and AVB Select specifying which physical filter is to be accessed. When an AVB filter (bit[8] of the register) is being selected only indexes of 0-2 are allowed.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;AVB_SELECT&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;AVB Select&quot;,
                                &quot;description&quot;: &quot;AVB Select.\n  If the AVB Endpoint is present this is used to indicate that the filter to be selected is one of the three dedicated filters.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              },
                              &quot;PROMISCUOUS_MODE&quot;: {
                                &quot;bit_offset&quot;: 31,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Promiscuous Mode&quot;,
                                &quot;description&quot;: &quot;Promiscuous Mode.\n  If this bit is set to 1, the frame filter is set to operate in promiscuous mode. All frames are passed to the receiver client regardless of the destination address.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_ENABLE_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x70C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Enable&quot;,
                            &quot;description&quot;: &quot;Frame Filter Enable&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000001&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_ENABLE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;Filter Enable&quot;,
                                &quot;description&quot;: &quot;Filter Enable.\n  This enable relates to the physical frame filter pointed to by the Filter index and take the value of AVB Select into account. If clear, the filter passes all packets.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_3_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x710&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFFFFFFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  All filter value registers have the same format. The lower 31 bits of filter value, at address 0x710, relating to the filter at physical Frame Filter index, that is to be written to the address table. The value is ordered so that the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Filter Value[47:0] as 0xFFEEDDCCBBAA.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_7_4_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x714&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0000FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_11_8_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x718&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_15_12_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x71C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_19_16_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x720&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_23_20_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x724&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_27_24_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x728&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_31_28_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x72C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_35_32_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x730&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_39_36_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x734&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_43_40_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x738&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_47_44_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x73C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_51_48_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x740&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_55_52_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x744&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_59_56_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x748&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_VALUE_BYTES_63_60_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x74C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Value&quot;,
                                &quot;description&quot;: &quot;Filter Value.\n  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x750&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0xFFFFFFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  All mask value registers have the same format.\n  If a mask bit is set to 1 then the corresponding bit of the Filter Value is compared by the frame filter. For example, if a basic Destination address comparison was desired then Bits[47:0] should be written to 1 and all other bits to 0.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_7_4_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x754&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x0000FFFF&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_11_8_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x758&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_15_12_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x75C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_19_16_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x760&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_23_20_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x764&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_27_24_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x768&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_31_28_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x76C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_35_32_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x770&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_39_36_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x774&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_43_40_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x778&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_47_44_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x77C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_51_48_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x780&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_55_52_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x784&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_59_56_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x788&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;FRAME_FILTER_MASK_VALUE_BYTES_63_60_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x78C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;description&quot;: &quot;Frame Filter Mask Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;FILTER_MASK_VALUE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;Filter Mask Value&quot;,
                                &quot;description&quot;: &quot;Filter Mask Value.\n  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_PTP_PKT_BUFFER_CTRL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12000&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX PTP Packet Buffer Control Register&quot;,
                            &quot;description&quot;: &quot;TX PTP Packet Buffer Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;TX_SEND_FRAME_BITS&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;tx_send_frame Bits&quot;,
                                &quot;description&quot;: &quot;tx_send_frame Bits.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;write-only&quot;
                              },
                              &quot;TX_FRAME_WAITING_INDICATION&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 8,
                                &quot;display_name&quot;: &quot;tx_frame_waiting Indication&quot;,
                                &quot;description&quot;: &quot;tx_frame_waiting Indication.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              },
                              &quot;TX_PACKET&quot;: {
                                &quot;bit_offset&quot;: 16,
                                &quot;bit_width&quot;: 3,
                                &quot;display_name&quot;: &quot;tx_packet&quot;,
                                &quot;description&quot;: &quot;tx_packet.\n  Indicates the number (block RAM bin position) of the most recently transmitted PTP packet.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RX_PTP_PKT_BUFFER_CTRL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12004&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RX PTP Packet Buffer Control Register&quot;,
                            &quot;description&quot;: &quot;RX PTP Packet Buffer Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;RX_CLEAR&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;rx_clear&quot;,
                                &quot;description&quot;: &quot;rx_clear.\n  When written with a 1, forces the buffer to empty, in practice moving the write address to the same value as the read address. If read, always returns 0.tx_send_frame Bitstx_send_frame Bits.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;write-only&quot;
                              },
                              &quot;RX_PACKET&quot;: {
                                &quot;bit_offset&quot;: 8,
                                &quot;bit_width&quot;: 4,
                                &quot;display_name&quot;: &quot;rx_packet&quot;,
                                &quot;description&quot;: &quot;rx_packet.\n  Indicates the number (block RAM bin position) of the most recently received PTP packet\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;TX_ARBITER_SEND_SLOPE_CTL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x1200C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Arbiter Send Slope Control Register&quot;,
                            &quot;description&quot;: &quot;TX Arbiter Send Slope Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000800&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_SEND_SLOPE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 20,
                                &quot;display_name&quot;: &quot;Value of sendSlope&quot;,
                                &quot;description&quot;: &quot;Value of sendSlope.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;TX_ARBITER_IDLE_SLOPE_CTL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12010&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;TX Arbiter Idle Slope Control Register&quot;,
                            &quot;description&quot;: &quot;TX Arbiter Idle Slope Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00001800&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_SEND_SLOPE&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 20,
                                &quot;display_name&quot;: &quot;Value of sendSlope&quot;,
                                &quot;description&quot;: &quot;Value of sendSlope.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RTC_NANOSEC_FIELD_OFFSET_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12800&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RTC Nanoseconds Field Offset&quot;,
                            &quot;description&quot;: &quot;RTC Nanoseconds Field Offset&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;OFFSET_NANOSEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 30,
                                &quot;display_name&quot;: &quot;30-bit offset value for the RTC nanoseconds&quot;,
                                &quot;description&quot;: &quot;30-bit offset value for the RTC nanoseconds.\n  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RTC_SEC_FIELD_OFFSET_BITS_31_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12808&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Seconds Field Offset Bits[31:0]&quot;,
                            &quot;description&quot;: &quot;Seconds Field Offset Bits[31:0]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;OFFSET_SEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;32-bit offset value for the RTC seconds field&quot;,
                                &quot;description&quot;: &quot;32-bit offset value for the RTC seconds field.\n  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RTC_SEC_FIELD_OFFSET_BITS_47_32_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x1280C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Seconds Field Offset Bits[47:32]&quot;,
                            &quot;description&quot;: &quot;Seconds Field Offset Bits[47:32]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;OFFSET_SEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;16-bit offset value for the RTC seconds field&quot;,
                                &quot;description&quot;: &quot;16-bit offset value for the RTC seconds field.\n  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;RTC_INCREMENT_VAL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12810&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RTC Increment Value Control Register&quot;,
                            &quot;description&quot;: &quot;RTC Increment Value Control Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;NANOSEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 26,
                                &quot;display_name&quot;: &quot;RTC Increment Value Control Register&quot;,
                                &quot;description&quot;: &quot;RTC Increment Value Control Register.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          },
                          &quot;CURRENT_RTC_NANOSEC_FIELD_VAL_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12814&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Current RTC Nanoseconds Value&quot;,
                            &quot;description&quot;: &quot;Current RTC Nanoseconds Value&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_RTC_NANOSEC_FIELD&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 30,
                                &quot;display_name&quot;: &quot;Current Value of the synchronized RTC nanoseconds field&quot;,
                                &quot;description&quot;: &quot;Current Value of the synchronized RTC nanoseconds field.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;CURRENT_RTC_SEC_FIELD_VAL_BITS_31_0_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12818&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Current RTC Seconds Field Value Bits [31:0]&quot;,
                            &quot;description&quot;: &quot;Current RTC Seconds Field Value Bits [31:0]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_RTC_SEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 32,
                                &quot;display_name&quot;: &quot;RTC Seconds field&quot;,
                                &quot;description&quot;: &quot;Sampled Value of the synchronized RTC Seconds field (Bits[31:0]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;CURRENT_RTC_SEC_FIELD_VAL_BITS_47_32_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x1281C&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;Current RTC Seconds Field Value Bits [47:32]&quot;,
                            &quot;description&quot;: &quot;Current RTC Seconds Field Value Bits [47:32]&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_RTC_SEC&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 16,
                                &quot;display_name&quot;: &quot;RTC Seconds field&quot;,
                                &quot;description&quot;: &quot;Sampled Value of the synchronized RTC Seconds field (Bits[47:32]).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-only&quot;
                              }
                            }
                          },
                          &quot;RTC_INTR_CLEAR_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12820&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RTC Interrupt Clear Register&quot;,
                            &quot;description&quot;: &quot;RTC Interrupt Clear Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;write-only&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;CLEAR&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 1,
                                &quot;display_name&quot;: &quot;RTC Interrupt Clear Register&quot;,
                                &quot;description&quot;: &quot;RTC Interrupt Clear Register.\n  Write ANY value to Bit[0] of this register to clear the interrupt_ptp_timer Interrupt signal. This bit always returns 0 on read.\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;write-only&quot;
                              }
                            }
                          },
                          &quot;RTC_PHASE_ADJ_REG&quot;: {
                            &quot;address_offset&quot;: &quot;0x12824&quot;,
                            &quot;size&quot;: 32,
                            &quot;display_name&quot;: &quot;RTC Interrupt Clear Register&quot;,
                            &quot;description&quot;: &quot;RTC Interrupt Clear Register&quot;,
                            &quot;is_volatile&quot;: true,
                            &quot;access&quot;: &quot;read-write&quot;,
                            &quot;reset_value&quot;: &quot;0x00000000&quot;,
                            &quot;fields&quot;: {
                              &quot;VAL_RTC_NANOSEC_FIELD&quot;: {
                                &quot;bit_offset&quot;: 0,
                                &quot;bit_width&quot;: 30,
                                &quot;display_name&quot;: &quot;RTC Phase Adjustment Register&quot;,
                                &quot;description&quot;: &quot;RTC Phase Adjustment Register.\n  ns value relating to the phase offset for all RTC derived timing signals (clk8k).\n&quot;,
                                &quot;is_volatile&quot;: true,
                                &quot;access&quot;: &quot;read-write&quot;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }"/>
          </xilinx:boundaryDescriptionInfo>
        </xilinx:componentInstanceExtensions>
      </spirit:vendorExtensions>
    </spirit:componentInstance>
  </spirit:componentInstances>
</spirit:design>
